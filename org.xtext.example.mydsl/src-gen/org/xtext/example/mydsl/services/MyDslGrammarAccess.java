/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DomainModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DomainModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementsTypeParserRuleCall_0_0 = (RuleCall)cElementsAssignment_0.eContents().get(0);
		private final Assignment cApisAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cApisRestAPIParserRuleCall_1_0 = (RuleCall)cApisAssignment_1.eContents().get(0);
		
		//DomainModel:
		//	elements+=Type* apis+=RestAPI*;
		@Override public ParserRule getRule() { return rule; }

		//elements+=Type* apis+=RestAPI*
		public Group getGroup() { return cGroup; }

		//elements+=Type*
		public Assignment getElementsAssignment_0() { return cElementsAssignment_0; }

		//Type
		public RuleCall getElementsTypeParserRuleCall_0_0() { return cElementsTypeParserRuleCall_0_0; }

		//apis+=RestAPI*
		public Assignment getApisAssignment_1() { return cApisAssignment_1; }

		//RestAPI
		public RuleCall getApisRestAPIParserRuleCall_1_0() { return cApisRestAPIParserRuleCall_1_0; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrimitiveTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataModelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRestModelParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cModelMapperParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Type:
		//	PrimitiveType | DataModel | RestModel | ModelMapper;
		@Override public ParserRule getRule() { return rule; }

		//PrimitiveType | DataModel | RestModel | ModelMapper
		public Alternatives getAlternatives() { return cAlternatives; }

		//PrimitiveType
		public RuleCall getPrimitiveTypeParserRuleCall_0() { return cPrimitiveTypeParserRuleCall_0; }

		//DataModel
		public RuleCall getDataModelParserRuleCall_1() { return cDataModelParserRuleCall_1; }

		//RestModel
		public RuleCall getRestModelParserRuleCall_2() { return cRestModelParserRuleCall_2; }

		//ModelMapper
		public RuleCall getModelMapperParserRuleCall_3() { return cModelMapperParserRuleCall_3; }
	}

	public class RestAPIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RestAPI");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBEGIN_REST_APIKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cResourceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cResourceResourceParserRuleCall_1_0 = (RuleCall)cResourceAssignment_1.eContents().get(0);
		private final Assignment cServiceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cServiceServiceParserRuleCall_2_0 = (RuleCall)cServiceAssignment_2.eContents().get(0);
		private final Assignment cDaoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDaoDataAccessObjectParserRuleCall_3_0 = (RuleCall)cDaoAssignment_3.eContents().get(0);
		private final Assignment cExceptionMapperAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cExceptionMapperExceptionMapperParserRuleCall_4_0 = (RuleCall)cExceptionMapperAssignment_4.eContents().get(0);
		private final Keyword cEND_REST_APIKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RestAPI:
		//	"<BEGIN_REST_API>" resource=Resource service+=Service* dao+=DataAccessObject* exceptionMapper+=ExceptionMapper*
		//	"<END_REST_API>";
		@Override public ParserRule getRule() { return rule; }

		//"<BEGIN_REST_API>" resource=Resource service+=Service* dao+=DataAccessObject* exceptionMapper+=ExceptionMapper*
		//"<END_REST_API>"
		public Group getGroup() { return cGroup; }

		//"<BEGIN_REST_API>"
		public Keyword getBEGIN_REST_APIKeyword_0() { return cBEGIN_REST_APIKeyword_0; }

		//resource=Resource
		public Assignment getResourceAssignment_1() { return cResourceAssignment_1; }

		//Resource
		public RuleCall getResourceResourceParserRuleCall_1_0() { return cResourceResourceParserRuleCall_1_0; }

		//service+=Service*
		public Assignment getServiceAssignment_2() { return cServiceAssignment_2; }

		//Service
		public RuleCall getServiceServiceParserRuleCall_2_0() { return cServiceServiceParserRuleCall_2_0; }

		//dao+=DataAccessObject*
		public Assignment getDaoAssignment_3() { return cDaoAssignment_3; }

		//DataAccessObject
		public RuleCall getDaoDataAccessObjectParserRuleCall_3_0() { return cDaoDataAccessObjectParserRuleCall_3_0; }

		//exceptionMapper+=ExceptionMapper*
		public Assignment getExceptionMapperAssignment_4() { return cExceptionMapperAssignment_4; }

		//ExceptionMapper
		public RuleCall getExceptionMapperExceptionMapperParserRuleCall_4_0() { return cExceptionMapperExceptionMapperParserRuleCall_4_0; }

		//"<END_REST_API>"
		public Keyword getEND_REST_APIKeyword_5() { return cEND_REST_APIKeyword_5; }
	}

	public class PrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrimitiveTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//PrimitiveType:
		//	"primitiveType" name=ID;
		@Override public ParserRule getRule() { return rule; }

		//"primitiveType" name=ID
		public Group getGroup() { return cGroup; }

		//"primitiveType"
		public Keyword getPrimitiveTypeKeyword_0() { return cPrimitiveTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class DataModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeDataModelCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeDataModelIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeDataModelCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIdINTEGERTerminalRuleCall_6_0 = (RuleCall)cIdAssignment_6.eContents().get(0);
		private final Assignment cFeaturesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFeaturesFeatureParserRuleCall_7_0 = (RuleCall)cFeaturesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//DataModel:
		//	"DataModel" name=ID ("extends" superType=[DataModel])? "{" "id" ":" id=INTEGER features+=Feature* "}";
		@Override public ParserRule getRule() { return rule; }

		//"DataModel" name=ID ("extends" superType=[DataModel])? "{" "id" ":" id=INTEGER features+=Feature* "}"
		public Group getGroup() { return cGroup; }

		//"DataModel"
		public Keyword getDataModelKeyword_0() { return cDataModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" superType=[DataModel])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//superType=[DataModel]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }

		//[DataModel]
		public CrossReference getSuperTypeDataModelCrossReference_2_1_0() { return cSuperTypeDataModelCrossReference_2_1_0; }

		//ID
		public RuleCall getSuperTypeDataModelIDTerminalRuleCall_2_1_0_1() { return cSuperTypeDataModelIDTerminalRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"id"
		public Keyword getIdKeyword_4() { return cIdKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//id=INTEGER
		public Assignment getIdAssignment_6() { return cIdAssignment_6; }

		//INTEGER
		public RuleCall getIdINTEGERTerminalRuleCall_6_0() { return cIdINTEGERTerminalRuleCall_6_0; }

		//features+=Feature*
		public Assignment getFeaturesAssignment_7() { return cFeaturesAssignment_7; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_7_0() { return cFeaturesFeatureParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class RestModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RestModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRestModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeRestModelCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeRestModelIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeRestModelCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cIdKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIdAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIdINTEGERTerminalRuleCall_6_0 = (RuleCall)cIdAssignment_6.eContents().get(0);
		private final Assignment cFeaturesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFeaturesFeatureParserRuleCall_7_0 = (RuleCall)cFeaturesAssignment_7.eContents().get(0);
		private final Keyword cSelfKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSelfAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSelfSTRINGTerminalRuleCall_10_0 = (RuleCall)cSelfAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//RestModel:
		//	"RestModel" name=ID ("extends" superType=[RestModel])? "{" "id" ":" id=INTEGER features+=Feature* "self" ":"
		//	self=STRING "}";
		@Override public ParserRule getRule() { return rule; }

		//"RestModel" name=ID ("extends" superType=[RestModel])? "{" "id" ":" id=INTEGER features+=Feature* "self" ":" self=STRING
		//"}"
		public Group getGroup() { return cGroup; }

		//"RestModel"
		public Keyword getRestModelKeyword_0() { return cRestModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" superType=[RestModel])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//superType=[RestModel]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }

		//[RestModel]
		public CrossReference getSuperTypeRestModelCrossReference_2_1_0() { return cSuperTypeRestModelCrossReference_2_1_0; }

		//ID
		public RuleCall getSuperTypeRestModelIDTerminalRuleCall_2_1_0_1() { return cSuperTypeRestModelIDTerminalRuleCall_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"id"
		public Keyword getIdKeyword_4() { return cIdKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//id=INTEGER
		public Assignment getIdAssignment_6() { return cIdAssignment_6; }

		//INTEGER
		public RuleCall getIdINTEGERTerminalRuleCall_6_0() { return cIdINTEGERTerminalRuleCall_6_0; }

		//features+=Feature*
		public Assignment getFeaturesAssignment_7() { return cFeaturesAssignment_7; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_7_0() { return cFeaturesFeatureParserRuleCall_7_0; }

		//"self"
		public Keyword getSelfKeyword_8() { return cSelfKeyword_8; }

		//":"
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }

		//self=STRING
		public Assignment getSelfAssignment_10() { return cSelfAssignment_10; }

		//STRING
		public RuleCall getSelfSTRINGTerminalRuleCall_10_0() { return cSelfSTRINGTerminalRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class ModelMapperElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelMapper");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelMapperKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTransformationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTransformationTransformationParserRuleCall_3_0 = (RuleCall)cTransformationAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ModelMapper:
		//	"ModelMapper" name=ID "{" transformation+=Transformation* "}";
		@Override public ParserRule getRule() { return rule; }

		//"ModelMapper" name=ID "{" transformation+=Transformation* "}"
		public Group getGroup() { return cGroup; }

		//"ModelMapper"
		public Keyword getModelMapperKeyword_0() { return cModelMapperKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//transformation+=Transformation*
		public Assignment getTransformationAssignment_3() { return cTransformationAssignment_3; }

		//Transformation
		public RuleCall getTransformationTransformationParserRuleCall_3_0() { return cTransformationTransformationParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class TransformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDataModelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cDataModelDataModelCrossReference_1_0 = (CrossReference)cDataModelAssignment_1.eContents().get(0);
		private final RuleCall cDataModelDataModelIDTerminalRuleCall_1_0_1 = (RuleCall)cDataModelDataModelCrossReference_1_0.eContents().get(1);
		private final Keyword cLessThanSignEqualsSignGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRestModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRestModelRestModelCrossReference_3_0 = (CrossReference)cRestModelAssignment_3.eContents().get(0);
		private final RuleCall cRestModelRestModelIDTerminalRuleCall_3_0_1 = (RuleCall)cRestModelRestModelCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Transformation:
		//	"(" dataModel=[DataModel] "<=>" restModel=[RestModel] ")";
		@Override public ParserRule getRule() { return rule; }

		//"(" dataModel=[DataModel] "<=>" restModel=[RestModel] ")"
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//dataModel=[DataModel]
		public Assignment getDataModelAssignment_1() { return cDataModelAssignment_1; }

		//[DataModel]
		public CrossReference getDataModelDataModelCrossReference_1_0() { return cDataModelDataModelCrossReference_1_0; }

		//ID
		public RuleCall getDataModelDataModelIDTerminalRuleCall_1_0_1() { return cDataModelDataModelIDTerminalRuleCall_1_0_1; }

		//"<=>"
		public Keyword getLessThanSignEqualsSignGreaterThanSignKeyword_2() { return cLessThanSignEqualsSignGreaterThanSignKeyword_2; }

		//restModel=[RestModel]
		public Assignment getRestModelAssignment_3() { return cRestModelAssignment_3; }

		//[RestModel]
		public CrossReference getRestModelRestModelCrossReference_3_0() { return cRestModelRestModelCrossReference_3_0; }

		//ID
		public RuleCall getRestModelRestModelIDTerminalRuleCall_3_0_1() { return cRestModelRestModelIDTerminalRuleCall_3_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cManyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cManyManyKeyword_0_0 = (Keyword)cManyAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeTypeCrossReference_3_0.eContents().get(1);
		
		//Feature:
		//	many?="many"? name=ID ":" type=[Type];
		@Override public ParserRule getRule() { return rule; }

		//many?="many"? name=ID ":" type=[Type]
		public Group getGroup() { return cGroup; }

		//many?="many"?
		public Assignment getManyAssignment_0() { return cManyAssignment_0; }

		//"many"
		public Keyword getManyManyKeyword_0_0() { return cManyManyKeyword_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[Type]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_3_0() { return cTypeTypeCrossReference_3_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_3_0_1() { return cTypeTypeIDTerminalRuleCall_3_0_1; }
	}

	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Resource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cServiceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cServiceServiceCrossReference_3_0 = (CrossReference)cServiceAssignment_3.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_3_0_1 = (RuleCall)cServiceServiceCrossReference_3_0.eContents().get(1);
		private final Assignment cExceptionMapperAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cExceptionMapperExceptionMapperCrossReference_4_0 = (CrossReference)cExceptionMapperAssignment_4.eContents().get(0);
		private final RuleCall cExceptionMapperExceptionMapperIDTerminalRuleCall_4_0_1 = (RuleCall)cExceptionMapperExceptionMapperCrossReference_4_0.eContents().get(1);
		private final Keyword cCreateKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCreateRestModelAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cCreateRestModelRestModelCrossReference_7_0 = (CrossReference)cCreateRestModelAssignment_7.eContents().get(0);
		private final RuleCall cCreateRestModelRestModelIDTerminalRuleCall_7_0_1 = (RuleCall)cCreateRestModelRestModelCrossReference_7_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cCreateValServiceAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCreateValServiceValidationServiceParserRuleCall_10_0 = (RuleCall)cCreateValServiceAssignment_10.eContents().get(0);
		private final Assignment cCreateMethodAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cCreateMethodBlockParserRuleCall_11_0 = (RuleCall)cCreateMethodAssignment_11.eContents().get(0);
		private final Assignment cCreateConclusionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cCreateConclusionRestModelMethodConclusionParserRuleCall_12_0 = (RuleCall)cCreateConclusionAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cFindKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cLeftParenthesisKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cFindbyAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cFindbyINTEGERTerminalRuleCall_16_0 = (RuleCall)cFindbyAssignment_16.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cLeftCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cFindMethodAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cFindMethodBlockParserRuleCall_19_0 = (RuleCall)cFindMethodAssignment_19.eContents().get(0);
		private final Assignment cFindConclusionAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cFindConclusionRestModelMethodConclusionParserRuleCall_20_0 = (RuleCall)cFindConclusionAssignment_20.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Keyword cUpdateKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cLeftParenthesisKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cUpdatebyAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cUpdatebyINTEGERTerminalRuleCall_24_0 = (RuleCall)cUpdatebyAssignment_24.eContents().get(0);
		private final Keyword cCommaKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Assignment cUpdateRestModelAssignment_26 = (Assignment)cGroup.eContents().get(26);
		private final CrossReference cUpdateRestModelRestModelCrossReference_26_0 = (CrossReference)cUpdateRestModelAssignment_26.eContents().get(0);
		private final RuleCall cUpdateRestModelRestModelIDTerminalRuleCall_26_0_1 = (RuleCall)cUpdateRestModelRestModelCrossReference_26_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_27 = (Keyword)cGroup.eContents().get(27);
		private final Keyword cLeftCurlyBracketKeyword_28 = (Keyword)cGroup.eContents().get(28);
		private final Assignment cUpdateValServiceAssignment_29 = (Assignment)cGroup.eContents().get(29);
		private final RuleCall cUpdateValServiceValidationServiceParserRuleCall_29_0 = (RuleCall)cUpdateValServiceAssignment_29.eContents().get(0);
		private final Assignment cUpdateMethodAssignment_30 = (Assignment)cGroup.eContents().get(30);
		private final RuleCall cUpdateMethodBlockParserRuleCall_30_0 = (RuleCall)cUpdateMethodAssignment_30.eContents().get(0);
		private final Assignment cUpdateConclusionAssignment_31 = (Assignment)cGroup.eContents().get(31);
		private final RuleCall cUpdateConclusionRestModelMethodConclusionParserRuleCall_31_0 = (RuleCall)cUpdateConclusionAssignment_31.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_32 = (Keyword)cGroup.eContents().get(32);
		private final Keyword cDeleteKeyword_33 = (Keyword)cGroup.eContents().get(33);
		private final Keyword cLeftParenthesisKeyword_34 = (Keyword)cGroup.eContents().get(34);
		private final Assignment cDeletebyAssignment_35 = (Assignment)cGroup.eContents().get(35);
		private final RuleCall cDeletebyINTEGERTerminalRuleCall_35_0 = (RuleCall)cDeletebyAssignment_35.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_36 = (Keyword)cGroup.eContents().get(36);
		private final Keyword cLeftCurlyBracketKeyword_37 = (Keyword)cGroup.eContents().get(37);
		private final Assignment cDeleteMethodAssignment_38 = (Assignment)cGroup.eContents().get(38);
		private final RuleCall cDeleteMethodBlockParserRuleCall_38_0 = (RuleCall)cDeleteMethodAssignment_38.eContents().get(0);
		private final Group cGroup_39 = (Group)cGroup.eContents().get(39);
		private final Keyword cThrowKeyword_39_0 = (Keyword)cGroup_39.eContents().get(0);
		private final Assignment cException4Assignment_39_1 = (Assignment)cGroup_39.eContents().get(1);
		private final RuleCall cException4RestExceptionListParserRuleCall_39_1_0 = (RuleCall)cException4Assignment_39_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_40 = (Keyword)cGroup.eContents().get(40);
		private final Keyword cRightCurlyBracketKeyword_41 = (Keyword)cGroup.eContents().get(41);
		
		//Resource:
		//	"Resource" name=ID "{" service+=[Service]+ exceptionMapper=[ExceptionMapper] "create" "(" createRestModel=[RestModel]
		//	")" "{" createValService=ValidationService createMethod=Block createConclusion=RestModelMethodConclusion "}" "find"
		//	"(" findby=INTEGER ")" "{" findMethod=Block findConclusion=RestModelMethodConclusion "}" "update" "(" updateby=INTEGER
		//	"," updateRestModel=[RestModel] ")" "{" updateValService=ValidationService updateMethod=Block
		//	updateConclusion=RestModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{" deleteMethod=Block ("throw"
		//	exception4=RestExceptionList)? "}" "}";
		@Override public ParserRule getRule() { return rule; }

		//"Resource" name=ID "{" service+=[Service]+ exceptionMapper=[ExceptionMapper] "create" "(" createRestModel=[RestModel]
		//")" "{" createValService=ValidationService createMethod=Block createConclusion=RestModelMethodConclusion "}" "find" "("
		//findby=INTEGER ")" "{" findMethod=Block findConclusion=RestModelMethodConclusion "}" "update" "(" updateby=INTEGER ","
		//updateRestModel=[RestModel] ")" "{" updateValService=ValidationService updateMethod=Block
		//updateConclusion=RestModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{" deleteMethod=Block ("throw"
		//exception4=RestExceptionList)? "}" "}"
		public Group getGroup() { return cGroup; }

		//"Resource"
		public Keyword getResourceKeyword_0() { return cResourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//service+=[Service]+
		public Assignment getServiceAssignment_3() { return cServiceAssignment_3; }

		//[Service]
		public CrossReference getServiceServiceCrossReference_3_0() { return cServiceServiceCrossReference_3_0; }

		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_3_0_1() { return cServiceServiceIDTerminalRuleCall_3_0_1; }

		//exceptionMapper=[ExceptionMapper]
		public Assignment getExceptionMapperAssignment_4() { return cExceptionMapperAssignment_4; }

		//[ExceptionMapper]
		public CrossReference getExceptionMapperExceptionMapperCrossReference_4_0() { return cExceptionMapperExceptionMapperCrossReference_4_0; }

		//ID
		public RuleCall getExceptionMapperExceptionMapperIDTerminalRuleCall_4_0_1() { return cExceptionMapperExceptionMapperIDTerminalRuleCall_4_0_1; }

		//"create"
		public Keyword getCreateKeyword_5() { return cCreateKeyword_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }

		//createRestModel=[RestModel]
		public Assignment getCreateRestModelAssignment_7() { return cCreateRestModelAssignment_7; }

		//[RestModel]
		public CrossReference getCreateRestModelRestModelCrossReference_7_0() { return cCreateRestModelRestModelCrossReference_7_0; }

		//ID
		public RuleCall getCreateRestModelRestModelIDTerminalRuleCall_7_0_1() { return cCreateRestModelRestModelIDTerminalRuleCall_7_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }

		//createValService=ValidationService
		public Assignment getCreateValServiceAssignment_10() { return cCreateValServiceAssignment_10; }

		//ValidationService
		public RuleCall getCreateValServiceValidationServiceParserRuleCall_10_0() { return cCreateValServiceValidationServiceParserRuleCall_10_0; }

		//createMethod=Block
		public Assignment getCreateMethodAssignment_11() { return cCreateMethodAssignment_11; }

		//Block
		public RuleCall getCreateMethodBlockParserRuleCall_11_0() { return cCreateMethodBlockParserRuleCall_11_0; }

		//createConclusion=RestModelMethodConclusion
		public Assignment getCreateConclusionAssignment_12() { return cCreateConclusionAssignment_12; }

		//RestModelMethodConclusion
		public RuleCall getCreateConclusionRestModelMethodConclusionParserRuleCall_12_0() { return cCreateConclusionRestModelMethodConclusionParserRuleCall_12_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }

		//"find"
		public Keyword getFindKeyword_14() { return cFindKeyword_14; }

		//"("
		public Keyword getLeftParenthesisKeyword_15() { return cLeftParenthesisKeyword_15; }

		//findby=INTEGER
		public Assignment getFindbyAssignment_16() { return cFindbyAssignment_16; }

		//INTEGER
		public RuleCall getFindbyINTEGERTerminalRuleCall_16_0() { return cFindbyINTEGERTerminalRuleCall_16_0; }

		//")"
		public Keyword getRightParenthesisKeyword_17() { return cRightParenthesisKeyword_17; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_18() { return cLeftCurlyBracketKeyword_18; }

		//findMethod=Block
		public Assignment getFindMethodAssignment_19() { return cFindMethodAssignment_19; }

		//Block
		public RuleCall getFindMethodBlockParserRuleCall_19_0() { return cFindMethodBlockParserRuleCall_19_0; }

		//findConclusion=RestModelMethodConclusion
		public Assignment getFindConclusionAssignment_20() { return cFindConclusionAssignment_20; }

		//RestModelMethodConclusion
		public RuleCall getFindConclusionRestModelMethodConclusionParserRuleCall_20_0() { return cFindConclusionRestModelMethodConclusionParserRuleCall_20_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_21() { return cRightCurlyBracketKeyword_21; }

		//"update"
		public Keyword getUpdateKeyword_22() { return cUpdateKeyword_22; }

		//"("
		public Keyword getLeftParenthesisKeyword_23() { return cLeftParenthesisKeyword_23; }

		//updateby=INTEGER
		public Assignment getUpdatebyAssignment_24() { return cUpdatebyAssignment_24; }

		//INTEGER
		public RuleCall getUpdatebyINTEGERTerminalRuleCall_24_0() { return cUpdatebyINTEGERTerminalRuleCall_24_0; }

		//","
		public Keyword getCommaKeyword_25() { return cCommaKeyword_25; }

		//updateRestModel=[RestModel]
		public Assignment getUpdateRestModelAssignment_26() { return cUpdateRestModelAssignment_26; }

		//[RestModel]
		public CrossReference getUpdateRestModelRestModelCrossReference_26_0() { return cUpdateRestModelRestModelCrossReference_26_0; }

		//ID
		public RuleCall getUpdateRestModelRestModelIDTerminalRuleCall_26_0_1() { return cUpdateRestModelRestModelIDTerminalRuleCall_26_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_27() { return cRightParenthesisKeyword_27; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_28() { return cLeftCurlyBracketKeyword_28; }

		//updateValService=ValidationService
		public Assignment getUpdateValServiceAssignment_29() { return cUpdateValServiceAssignment_29; }

		//ValidationService
		public RuleCall getUpdateValServiceValidationServiceParserRuleCall_29_0() { return cUpdateValServiceValidationServiceParserRuleCall_29_0; }

		//updateMethod=Block
		public Assignment getUpdateMethodAssignment_30() { return cUpdateMethodAssignment_30; }

		//Block
		public RuleCall getUpdateMethodBlockParserRuleCall_30_0() { return cUpdateMethodBlockParserRuleCall_30_0; }

		//updateConclusion=RestModelMethodConclusion
		public Assignment getUpdateConclusionAssignment_31() { return cUpdateConclusionAssignment_31; }

		//RestModelMethodConclusion
		public RuleCall getUpdateConclusionRestModelMethodConclusionParserRuleCall_31_0() { return cUpdateConclusionRestModelMethodConclusionParserRuleCall_31_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_32() { return cRightCurlyBracketKeyword_32; }

		//"delete"
		public Keyword getDeleteKeyword_33() { return cDeleteKeyword_33; }

		//"("
		public Keyword getLeftParenthesisKeyword_34() { return cLeftParenthesisKeyword_34; }

		//deleteby=INTEGER
		public Assignment getDeletebyAssignment_35() { return cDeletebyAssignment_35; }

		//INTEGER
		public RuleCall getDeletebyINTEGERTerminalRuleCall_35_0() { return cDeletebyINTEGERTerminalRuleCall_35_0; }

		//")"
		public Keyword getRightParenthesisKeyword_36() { return cRightParenthesisKeyword_36; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_37() { return cLeftCurlyBracketKeyword_37; }

		//deleteMethod=Block
		public Assignment getDeleteMethodAssignment_38() { return cDeleteMethodAssignment_38; }

		//Block
		public RuleCall getDeleteMethodBlockParserRuleCall_38_0() { return cDeleteMethodBlockParserRuleCall_38_0; }

		//("throw" exception4=RestExceptionList)?
		public Group getGroup_39() { return cGroup_39; }

		//"throw"
		public Keyword getThrowKeyword_39_0() { return cThrowKeyword_39_0; }

		//exception4=RestExceptionList
		public Assignment getException4Assignment_39_1() { return cException4Assignment_39_1; }

		//RestExceptionList
		public RuleCall getException4RestExceptionListParserRuleCall_39_1_0() { return cException4RestExceptionListParserRuleCall_39_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_40() { return cRightCurlyBracketKeyword_40; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_41() { return cRightCurlyBracketKeyword_41; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDaoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDaoDataAccessObjectCrossReference_3_0 = (CrossReference)cDaoAssignment_3.eContents().get(0);
		private final RuleCall cDaoDataAccessObjectIDTerminalRuleCall_3_0_1 = (RuleCall)cDaoDataAccessObjectCrossReference_3_0.eContents().get(1);
		private final Keyword cCreateKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cCreateDataModelAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cCreateDataModelDataModelCrossReference_6_0 = (CrossReference)cCreateDataModelAssignment_6.eContents().get(0);
		private final RuleCall cCreateDataModelDataModelIDTerminalRuleCall_6_0_1 = (RuleCall)cCreateDataModelDataModelCrossReference_6_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cCreateMethodAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cCreateMethodBlockParserRuleCall_9_0 = (RuleCall)cCreateMethodAssignment_9.eContents().get(0);
		private final Assignment cCreateConclusionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCreateConclusionDataModelMethodConclusionParserRuleCall_10_0 = (RuleCall)cCreateConclusionAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cFindKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftParenthesisKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cFindbyAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cFindbyINTEGERTerminalRuleCall_14_0 = (RuleCall)cFindbyAssignment_14.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cFindMethodAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cFindMethodBlockParserRuleCall_17_0 = (RuleCall)cFindMethodAssignment_17.eContents().get(0);
		private final Assignment cFindConclusionAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cFindConclusionDataModelMethodConclusionParserRuleCall_18_0 = (RuleCall)cFindConclusionAssignment_18.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cUpdateKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cLeftParenthesisKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cUpdatebyAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cUpdatebyINTEGERTerminalRuleCall_22_0 = (RuleCall)cUpdatebyAssignment_22.eContents().get(0);
		private final Keyword cCommaKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cUpdateDataModelAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final CrossReference cUpdateDataModelDataModelCrossReference_24_0 = (CrossReference)cUpdateDataModelAssignment_24.eContents().get(0);
		private final RuleCall cUpdateDataModelDataModelIDTerminalRuleCall_24_0_1 = (RuleCall)cUpdateDataModelDataModelCrossReference_24_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Keyword cLeftCurlyBracketKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Assignment cUpdateMethodAssignment_27 = (Assignment)cGroup.eContents().get(27);
		private final RuleCall cUpdateMethodBlockParserRuleCall_27_0 = (RuleCall)cUpdateMethodAssignment_27.eContents().get(0);
		private final Assignment cUpdateConclusionAssignment_28 = (Assignment)cGroup.eContents().get(28);
		private final RuleCall cUpdateConclusionDataModelMethodConclusionParserRuleCall_28_0 = (RuleCall)cUpdateConclusionAssignment_28.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_29 = (Keyword)cGroup.eContents().get(29);
		private final Keyword cDeleteKeyword_30 = (Keyword)cGroup.eContents().get(30);
		private final Keyword cLeftParenthesisKeyword_31 = (Keyword)cGroup.eContents().get(31);
		private final Assignment cDeletebyAssignment_32 = (Assignment)cGroup.eContents().get(32);
		private final RuleCall cDeletebyINTEGERTerminalRuleCall_32_0 = (RuleCall)cDeletebyAssignment_32.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_33 = (Keyword)cGroup.eContents().get(33);
		private final Keyword cLeftCurlyBracketKeyword_34 = (Keyword)cGroup.eContents().get(34);
		private final Assignment cDeleteMethodAssignment_35 = (Assignment)cGroup.eContents().get(35);
		private final RuleCall cDeleteMethodBlockParserRuleCall_35_0 = (RuleCall)cDeleteMethodAssignment_35.eContents().get(0);
		private final Group cGroup_36 = (Group)cGroup.eContents().get(36);
		private final Keyword cThrowKeyword_36_0 = (Keyword)cGroup_36.eContents().get(0);
		private final Assignment cException4Assignment_36_1 = (Assignment)cGroup_36.eContents().get(1);
		private final RuleCall cException4RestExceptionListParserRuleCall_36_1_0 = (RuleCall)cException4Assignment_36_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_37 = (Keyword)cGroup.eContents().get(37);
		private final Keyword cRightCurlyBracketKeyword_38 = (Keyword)cGroup.eContents().get(38);
		
		//Service:
		//	"Service" name=ID "{" dao+=[DataAccessObject]+ "create" "(" createDataModel=[DataModel] ")" "{" createMethod=Block
		//	createConclusion=DataModelMethodConclusion "}" "find" "(" findby=INTEGER ")" "{" findMethod=Block
		//	findConclusion=DataModelMethodConclusion "}" "update" "(" updateby=INTEGER "," updateDataModel=[DataModel] ")" "{"
		//	updateMethod=Block updateConclusion=DataModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{"
		//	deleteMethod=Block ("throw" exception4=RestExceptionList)? "}" "}";
		@Override public ParserRule getRule() { return rule; }

		//"Service" name=ID "{" dao+=[DataAccessObject]+ "create" "(" createDataModel=[DataModel] ")" "{" createMethod=Block
		//createConclusion=DataModelMethodConclusion "}" "find" "(" findby=INTEGER ")" "{" findMethod=Block
		//findConclusion=DataModelMethodConclusion "}" "update" "(" updateby=INTEGER "," updateDataModel=[DataModel] ")" "{"
		//updateMethod=Block updateConclusion=DataModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{"
		//deleteMethod=Block ("throw" exception4=RestExceptionList)? "}" "}"
		public Group getGroup() { return cGroup; }

		//"Service"
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//dao+=[DataAccessObject]+
		public Assignment getDaoAssignment_3() { return cDaoAssignment_3; }

		//[DataAccessObject]
		public CrossReference getDaoDataAccessObjectCrossReference_3_0() { return cDaoDataAccessObjectCrossReference_3_0; }

		//ID
		public RuleCall getDaoDataAccessObjectIDTerminalRuleCall_3_0_1() { return cDaoDataAccessObjectIDTerminalRuleCall_3_0_1; }

		//"create"
		public Keyword getCreateKeyword_4() { return cCreateKeyword_4; }

		//"("
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }

		//createDataModel=[DataModel]
		public Assignment getCreateDataModelAssignment_6() { return cCreateDataModelAssignment_6; }

		//[DataModel]
		public CrossReference getCreateDataModelDataModelCrossReference_6_0() { return cCreateDataModelDataModelCrossReference_6_0; }

		//ID
		public RuleCall getCreateDataModelDataModelIDTerminalRuleCall_6_0_1() { return cCreateDataModelDataModelIDTerminalRuleCall_6_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//createMethod=Block
		public Assignment getCreateMethodAssignment_9() { return cCreateMethodAssignment_9; }

		//Block
		public RuleCall getCreateMethodBlockParserRuleCall_9_0() { return cCreateMethodBlockParserRuleCall_9_0; }

		//createConclusion=DataModelMethodConclusion
		public Assignment getCreateConclusionAssignment_10() { return cCreateConclusionAssignment_10; }

		//DataModelMethodConclusion
		public RuleCall getCreateConclusionDataModelMethodConclusionParserRuleCall_10_0() { return cCreateConclusionDataModelMethodConclusionParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }

		//"find"
		public Keyword getFindKeyword_12() { return cFindKeyword_12; }

		//"("
		public Keyword getLeftParenthesisKeyword_13() { return cLeftParenthesisKeyword_13; }

		//findby=INTEGER
		public Assignment getFindbyAssignment_14() { return cFindbyAssignment_14; }

		//INTEGER
		public RuleCall getFindbyINTEGERTerminalRuleCall_14_0() { return cFindbyINTEGERTerminalRuleCall_14_0; }

		//")"
		public Keyword getRightParenthesisKeyword_15() { return cRightParenthesisKeyword_15; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }

		//findMethod=Block
		public Assignment getFindMethodAssignment_17() { return cFindMethodAssignment_17; }

		//Block
		public RuleCall getFindMethodBlockParserRuleCall_17_0() { return cFindMethodBlockParserRuleCall_17_0; }

		//findConclusion=DataModelMethodConclusion
		public Assignment getFindConclusionAssignment_18() { return cFindConclusionAssignment_18; }

		//DataModelMethodConclusion
		public RuleCall getFindConclusionDataModelMethodConclusionParserRuleCall_18_0() { return cFindConclusionDataModelMethodConclusionParserRuleCall_18_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }

		//"update"
		public Keyword getUpdateKeyword_20() { return cUpdateKeyword_20; }

		//"("
		public Keyword getLeftParenthesisKeyword_21() { return cLeftParenthesisKeyword_21; }

		//updateby=INTEGER
		public Assignment getUpdatebyAssignment_22() { return cUpdatebyAssignment_22; }

		//INTEGER
		public RuleCall getUpdatebyINTEGERTerminalRuleCall_22_0() { return cUpdatebyINTEGERTerminalRuleCall_22_0; }

		//","
		public Keyword getCommaKeyword_23() { return cCommaKeyword_23; }

		//updateDataModel=[DataModel]
		public Assignment getUpdateDataModelAssignment_24() { return cUpdateDataModelAssignment_24; }

		//[DataModel]
		public CrossReference getUpdateDataModelDataModelCrossReference_24_0() { return cUpdateDataModelDataModelCrossReference_24_0; }

		//ID
		public RuleCall getUpdateDataModelDataModelIDTerminalRuleCall_24_0_1() { return cUpdateDataModelDataModelIDTerminalRuleCall_24_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_25() { return cRightParenthesisKeyword_25; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_26() { return cLeftCurlyBracketKeyword_26; }

		//updateMethod=Block
		public Assignment getUpdateMethodAssignment_27() { return cUpdateMethodAssignment_27; }

		//Block
		public RuleCall getUpdateMethodBlockParserRuleCall_27_0() { return cUpdateMethodBlockParserRuleCall_27_0; }

		//updateConclusion=DataModelMethodConclusion
		public Assignment getUpdateConclusionAssignment_28() { return cUpdateConclusionAssignment_28; }

		//DataModelMethodConclusion
		public RuleCall getUpdateConclusionDataModelMethodConclusionParserRuleCall_28_0() { return cUpdateConclusionDataModelMethodConclusionParserRuleCall_28_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_29() { return cRightCurlyBracketKeyword_29; }

		//"delete"
		public Keyword getDeleteKeyword_30() { return cDeleteKeyword_30; }

		//"("
		public Keyword getLeftParenthesisKeyword_31() { return cLeftParenthesisKeyword_31; }

		//deleteby=INTEGER
		public Assignment getDeletebyAssignment_32() { return cDeletebyAssignment_32; }

		//INTEGER
		public RuleCall getDeletebyINTEGERTerminalRuleCall_32_0() { return cDeletebyINTEGERTerminalRuleCall_32_0; }

		//")"
		public Keyword getRightParenthesisKeyword_33() { return cRightParenthesisKeyword_33; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_34() { return cLeftCurlyBracketKeyword_34; }

		//deleteMethod=Block
		public Assignment getDeleteMethodAssignment_35() { return cDeleteMethodAssignment_35; }

		//Block
		public RuleCall getDeleteMethodBlockParserRuleCall_35_0() { return cDeleteMethodBlockParserRuleCall_35_0; }

		//("throw" exception4=RestExceptionList)?
		public Group getGroup_36() { return cGroup_36; }

		//"throw"
		public Keyword getThrowKeyword_36_0() { return cThrowKeyword_36_0; }

		//exception4=RestExceptionList
		public Assignment getException4Assignment_36_1() { return cException4Assignment_36_1; }

		//RestExceptionList
		public RuleCall getException4RestExceptionListParserRuleCall_36_1_0() { return cException4RestExceptionListParserRuleCall_36_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_37() { return cRightCurlyBracketKeyword_37; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_38() { return cRightCurlyBracketKeyword_38; }
	}

	public class ValidationServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValidationService");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValidateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRestModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRestModelRestModelCrossReference_2_0 = (CrossReference)cRestModelAssignment_2.eContents().get(0);
		private final RuleCall cRestModelRestModelIDTerminalRuleCall_2_0_1 = (RuleCall)cRestModelRestModelCrossReference_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBlockAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBlockBlockParserRuleCall_5_0 = (RuleCall)cBlockAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ValidationService:
		//	"validate" "(" restModel=[RestModel] ")" "{" block=Block "}";
		@Override public ParserRule getRule() { return rule; }

		//"validate" "(" restModel=[RestModel] ")" "{" block=Block "}"
		public Group getGroup() { return cGroup; }

		//"validate"
		public Keyword getValidateKeyword_0() { return cValidateKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//restModel=[RestModel]
		public Assignment getRestModelAssignment_2() { return cRestModelAssignment_2; }

		//[RestModel]
		public CrossReference getRestModelRestModelCrossReference_2_0() { return cRestModelRestModelCrossReference_2_0; }

		//ID
		public RuleCall getRestModelRestModelIDTerminalRuleCall_2_0_1() { return cRestModelRestModelIDTerminalRuleCall_2_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//block=Block
		public Assignment getBlockAssignment_5() { return cBlockAssignment_5; }

		//Block
		public RuleCall getBlockBlockParserRuleCall_5_0() { return cBlockBlockParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class DataAccessObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataAccessObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDAOKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCreateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCreateDataModelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cCreateDataModelDataModelCrossReference_5_0 = (CrossReference)cCreateDataModelAssignment_5.eContents().get(0);
		private final RuleCall cCreateDataModelDataModelIDTerminalRuleCall_5_0_1 = (RuleCall)cCreateDataModelDataModelCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cCreateMethodAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCreateMethodBlockParserRuleCall_8_0 = (RuleCall)cCreateMethodAssignment_8.eContents().get(0);
		private final Assignment cCreateConclusionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cCreateConclusionDataModelMethodConclusionParserRuleCall_9_0 = (RuleCall)cCreateConclusionAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cFindKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cFindbyAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cFindbyINTEGERTerminalRuleCall_13_0 = (RuleCall)cFindbyAssignment_13.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cLeftCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cFindMethodAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cFindMethodBlockParserRuleCall_16_0 = (RuleCall)cFindMethodAssignment_16.eContents().get(0);
		private final Assignment cFindConclusionAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cFindConclusionDataModelMethodConclusionParserRuleCall_17_0 = (RuleCall)cFindConclusionAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cUpdateKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cLeftParenthesisKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Assignment cUpdatebyAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cUpdatebyINTEGERTerminalRuleCall_21_0 = (RuleCall)cUpdatebyAssignment_21.eContents().get(0);
		private final Keyword cCommaKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Assignment cUpdateDataModelAssignment_23 = (Assignment)cGroup.eContents().get(23);
		private final CrossReference cUpdateDataModelDataModelCrossReference_23_0 = (CrossReference)cUpdateDataModelAssignment_23.eContents().get(0);
		private final RuleCall cUpdateDataModelDataModelIDTerminalRuleCall_23_0_1 = (RuleCall)cUpdateDataModelDataModelCrossReference_23_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Keyword cLeftCurlyBracketKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Assignment cUpdateMethodAssignment_26 = (Assignment)cGroup.eContents().get(26);
		private final RuleCall cUpdateMethodBlockParserRuleCall_26_0 = (RuleCall)cUpdateMethodAssignment_26.eContents().get(0);
		private final Assignment cUpdateConclusionAssignment_27 = (Assignment)cGroup.eContents().get(27);
		private final RuleCall cUpdateConclusionDataModelMethodConclusionParserRuleCall_27_0 = (RuleCall)cUpdateConclusionAssignment_27.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_28 = (Keyword)cGroup.eContents().get(28);
		private final Keyword cDeleteKeyword_29 = (Keyword)cGroup.eContents().get(29);
		private final Keyword cLeftParenthesisKeyword_30 = (Keyword)cGroup.eContents().get(30);
		private final Assignment cDeletebyAssignment_31 = (Assignment)cGroup.eContents().get(31);
		private final RuleCall cDeletebyINTEGERTerminalRuleCall_31_0 = (RuleCall)cDeletebyAssignment_31.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_32 = (Keyword)cGroup.eContents().get(32);
		private final Keyword cLeftCurlyBracketKeyword_33 = (Keyword)cGroup.eContents().get(33);
		private final Assignment cDeleteMethodAssignment_34 = (Assignment)cGroup.eContents().get(34);
		private final RuleCall cDeleteMethodBlockParserRuleCall_34_0 = (RuleCall)cDeleteMethodAssignment_34.eContents().get(0);
		private final Group cGroup_35 = (Group)cGroup.eContents().get(35);
		private final Keyword cThrowKeyword_35_0 = (Keyword)cGroup_35.eContents().get(0);
		private final Assignment cExceptionsAssignment_35_1 = (Assignment)cGroup_35.eContents().get(1);
		private final RuleCall cExceptionsRestExceptionListParserRuleCall_35_1_0 = (RuleCall)cExceptionsAssignment_35_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_36 = (Keyword)cGroup.eContents().get(36);
		private final Keyword cRightCurlyBracketKeyword_37 = (Keyword)cGroup.eContents().get(37);
		
		//DataAccessObject:
		//	"DAO" name=ID "{" "create" "(" createDataModel=[DataModel] ")" "{" createMethod=Block
		//	createConclusion=DataModelMethodConclusion "}" "find" "(" findby=INTEGER ")" "{" findMethod=Block
		//	findConclusion=DataModelMethodConclusion "}" "update" "(" updateby=INTEGER "," updateDataModel=[DataModel] ")" "{"
		//	updateMethod=Block updateConclusion=DataModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{"
		//	deleteMethod=Block ("throw" exceptions=RestExceptionList)? "}" "}";
		@Override public ParserRule getRule() { return rule; }

		//"DAO" name=ID "{" "create" "(" createDataModel=[DataModel] ")" "{" createMethod=Block
		//createConclusion=DataModelMethodConclusion "}" "find" "(" findby=INTEGER ")" "{" findMethod=Block
		//findConclusion=DataModelMethodConclusion "}" "update" "(" updateby=INTEGER "," updateDataModel=[DataModel] ")" "{"
		//updateMethod=Block updateConclusion=DataModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{"
		//deleteMethod=Block ("throw" exceptions=RestExceptionList)? "}" "}"
		public Group getGroup() { return cGroup; }

		//"DAO"
		public Keyword getDAOKeyword_0() { return cDAOKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"create"
		public Keyword getCreateKeyword_3() { return cCreateKeyword_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//createDataModel=[DataModel]
		public Assignment getCreateDataModelAssignment_5() { return cCreateDataModelAssignment_5; }

		//[DataModel]
		public CrossReference getCreateDataModelDataModelCrossReference_5_0() { return cCreateDataModelDataModelCrossReference_5_0; }

		//ID
		public RuleCall getCreateDataModelDataModelIDTerminalRuleCall_5_0_1() { return cCreateDataModelDataModelIDTerminalRuleCall_5_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//createMethod=Block
		public Assignment getCreateMethodAssignment_8() { return cCreateMethodAssignment_8; }

		//Block
		public RuleCall getCreateMethodBlockParserRuleCall_8_0() { return cCreateMethodBlockParserRuleCall_8_0; }

		//createConclusion=DataModelMethodConclusion
		public Assignment getCreateConclusionAssignment_9() { return cCreateConclusionAssignment_9; }

		//DataModelMethodConclusion
		public RuleCall getCreateConclusionDataModelMethodConclusionParserRuleCall_9_0() { return cCreateConclusionDataModelMethodConclusionParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }

		//"find"
		public Keyword getFindKeyword_11() { return cFindKeyword_11; }

		//"("
		public Keyword getLeftParenthesisKeyword_12() { return cLeftParenthesisKeyword_12; }

		//findby=INTEGER
		public Assignment getFindbyAssignment_13() { return cFindbyAssignment_13; }

		//INTEGER
		public RuleCall getFindbyINTEGERTerminalRuleCall_13_0() { return cFindbyINTEGERTerminalRuleCall_13_0; }

		//")"
		public Keyword getRightParenthesisKeyword_14() { return cRightParenthesisKeyword_14; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_15() { return cLeftCurlyBracketKeyword_15; }

		//findMethod=Block
		public Assignment getFindMethodAssignment_16() { return cFindMethodAssignment_16; }

		//Block
		public RuleCall getFindMethodBlockParserRuleCall_16_0() { return cFindMethodBlockParserRuleCall_16_0; }

		//findConclusion=DataModelMethodConclusion
		public Assignment getFindConclusionAssignment_17() { return cFindConclusionAssignment_17; }

		//DataModelMethodConclusion
		public RuleCall getFindConclusionDataModelMethodConclusionParserRuleCall_17_0() { return cFindConclusionDataModelMethodConclusionParserRuleCall_17_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }

		//"update"
		public Keyword getUpdateKeyword_19() { return cUpdateKeyword_19; }

		//"("
		public Keyword getLeftParenthesisKeyword_20() { return cLeftParenthesisKeyword_20; }

		//updateby=INTEGER
		public Assignment getUpdatebyAssignment_21() { return cUpdatebyAssignment_21; }

		//INTEGER
		public RuleCall getUpdatebyINTEGERTerminalRuleCall_21_0() { return cUpdatebyINTEGERTerminalRuleCall_21_0; }

		//","
		public Keyword getCommaKeyword_22() { return cCommaKeyword_22; }

		//updateDataModel=[DataModel]
		public Assignment getUpdateDataModelAssignment_23() { return cUpdateDataModelAssignment_23; }

		//[DataModel]
		public CrossReference getUpdateDataModelDataModelCrossReference_23_0() { return cUpdateDataModelDataModelCrossReference_23_0; }

		//ID
		public RuleCall getUpdateDataModelDataModelIDTerminalRuleCall_23_0_1() { return cUpdateDataModelDataModelIDTerminalRuleCall_23_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_24() { return cRightParenthesisKeyword_24; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_25() { return cLeftCurlyBracketKeyword_25; }

		//updateMethod=Block
		public Assignment getUpdateMethodAssignment_26() { return cUpdateMethodAssignment_26; }

		//Block
		public RuleCall getUpdateMethodBlockParserRuleCall_26_0() { return cUpdateMethodBlockParserRuleCall_26_0; }

		//updateConclusion=DataModelMethodConclusion
		public Assignment getUpdateConclusionAssignment_27() { return cUpdateConclusionAssignment_27; }

		//DataModelMethodConclusion
		public RuleCall getUpdateConclusionDataModelMethodConclusionParserRuleCall_27_0() { return cUpdateConclusionDataModelMethodConclusionParserRuleCall_27_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_28() { return cRightCurlyBracketKeyword_28; }

		//"delete"
		public Keyword getDeleteKeyword_29() { return cDeleteKeyword_29; }

		//"("
		public Keyword getLeftParenthesisKeyword_30() { return cLeftParenthesisKeyword_30; }

		//deleteby=INTEGER
		public Assignment getDeletebyAssignment_31() { return cDeletebyAssignment_31; }

		//INTEGER
		public RuleCall getDeletebyINTEGERTerminalRuleCall_31_0() { return cDeletebyINTEGERTerminalRuleCall_31_0; }

		//")"
		public Keyword getRightParenthesisKeyword_32() { return cRightParenthesisKeyword_32; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_33() { return cLeftCurlyBracketKeyword_33; }

		//deleteMethod=Block
		public Assignment getDeleteMethodAssignment_34() { return cDeleteMethodAssignment_34; }

		//Block
		public RuleCall getDeleteMethodBlockParserRuleCall_34_0() { return cDeleteMethodBlockParserRuleCall_34_0; }

		//("throw" exceptions=RestExceptionList)?
		public Group getGroup_35() { return cGroup_35; }

		//"throw"
		public Keyword getThrowKeyword_35_0() { return cThrowKeyword_35_0; }

		//exceptions=RestExceptionList
		public Assignment getExceptionsAssignment_35_1() { return cExceptionsAssignment_35_1; }

		//RestExceptionList
		public RuleCall getExceptionsRestExceptionListParserRuleCall_35_1_0() { return cExceptionsRestExceptionListParserRuleCall_35_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_36() { return cRightCurlyBracketKeyword_36; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_37() { return cRightCurlyBracketKeyword_37; }
	}

	public class DataModelMethodConclusionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataModelMethodConclusion");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cReturnKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cDataModelAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cDataModelDataModelCrossReference_0_1_0 = (CrossReference)cDataModelAssignment_0_1.eContents().get(0);
		private final RuleCall cDataModelDataModelIDTerminalRuleCall_0_1_0_1 = (RuleCall)cDataModelDataModelCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cThrowKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cExceptionsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cExceptionsRestExceptionListParserRuleCall_1_1_0 = (RuleCall)cExceptionsAssignment_1_1.eContents().get(0);
		
		//DataModelMethodConclusion:
		//	"return" dataModel=[DataModel] | "throw" exceptions+=RestExceptionList;
		@Override public ParserRule getRule() { return rule; }

		//"return" dataModel=[DataModel] | "throw" exceptions+=RestExceptionList
		public Alternatives getAlternatives() { return cAlternatives; }

		//"return" dataModel=[DataModel]
		public Group getGroup_0() { return cGroup_0; }

		//"return"
		public Keyword getReturnKeyword_0_0() { return cReturnKeyword_0_0; }

		//dataModel=[DataModel]
		public Assignment getDataModelAssignment_0_1() { return cDataModelAssignment_0_1; }

		//[DataModel]
		public CrossReference getDataModelDataModelCrossReference_0_1_0() { return cDataModelDataModelCrossReference_0_1_0; }

		//ID
		public RuleCall getDataModelDataModelIDTerminalRuleCall_0_1_0_1() { return cDataModelDataModelIDTerminalRuleCall_0_1_0_1; }

		//"throw" exceptions+=RestExceptionList
		public Group getGroup_1() { return cGroup_1; }

		//"throw"
		public Keyword getThrowKeyword_1_0() { return cThrowKeyword_1_0; }

		//exceptions+=RestExceptionList
		public Assignment getExceptionsAssignment_1_1() { return cExceptionsAssignment_1_1; }

		//RestExceptionList
		public RuleCall getExceptionsRestExceptionListParserRuleCall_1_1_0() { return cExceptionsRestExceptionListParserRuleCall_1_1_0; }
	}

	public class RestModelMethodConclusionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RestModelMethodConclusion");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cReturnKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cRestModelAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final CrossReference cRestModelRestModelCrossReference_0_1_0 = (CrossReference)cRestModelAssignment_0_1.eContents().get(0);
		private final RuleCall cRestModelRestModelIDTerminalRuleCall_0_1_0_1 = (RuleCall)cRestModelRestModelCrossReference_0_1_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cThrowKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cExceptionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cExceptionRestExceptionListParserRuleCall_1_1_0 = (RuleCall)cExceptionAssignment_1_1.eContents().get(0);
		
		//RestModelMethodConclusion:
		//	"return" restModel=[RestModel] | "throw" exception+=RestExceptionList;
		@Override public ParserRule getRule() { return rule; }

		//"return" restModel=[RestModel] | "throw" exception+=RestExceptionList
		public Alternatives getAlternatives() { return cAlternatives; }

		//"return" restModel=[RestModel]
		public Group getGroup_0() { return cGroup_0; }

		//"return"
		public Keyword getReturnKeyword_0_0() { return cReturnKeyword_0_0; }

		//restModel=[RestModel]
		public Assignment getRestModelAssignment_0_1() { return cRestModelAssignment_0_1; }

		//[RestModel]
		public CrossReference getRestModelRestModelCrossReference_0_1_0() { return cRestModelRestModelCrossReference_0_1_0; }

		//ID
		public RuleCall getRestModelRestModelIDTerminalRuleCall_0_1_0_1() { return cRestModelRestModelIDTerminalRuleCall_0_1_0_1; }

		//"throw" exception+=RestExceptionList
		public Group getGroup_1() { return cGroup_1; }

		//"throw"
		public Keyword getThrowKeyword_1_0() { return cThrowKeyword_1_0; }

		//exception+=RestExceptionList
		public Assignment getExceptionAssignment_1_1() { return cExceptionAssignment_1_1; }

		//RestExceptionList
		public RuleCall getExceptionRestExceptionListParserRuleCall_1_1_0() { return cExceptionRestExceptionListParserRuleCall_1_1_0; }
	}

	public class RestExceptionListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RestExceptionList");
		private final Assignment cExceptionAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cExceptionRestExceptionParserRuleCall_0 = (RuleCall)cExceptionAssignment.eContents().get(0);
		
		//RestExceptionList:
		//	exception+=RestException+;
		@Override public ParserRule getRule() { return rule; }

		//exception+=RestException+
		public Assignment getExceptionAssignment() { return cExceptionAssignment; }

		//RestException
		public RuleCall getExceptionRestExceptionParserRuleCall_0() { return cExceptionRestExceptionParserRuleCall_0; }
	}

	public class BaseExceptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BaseException");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cErrorCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cErrorCodeSTRINGTerminalRuleCall_1_0 = (RuleCall)cErrorCodeAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMessageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessageSTRINGTerminalRuleCall_3_0 = (RuleCall)cMessageAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BaseException:
		//	"[" errorCode=STRING "," message=STRING "]";
		@Override public ParserRule getRule() { return rule; }

		//"[" errorCode=STRING "," message=STRING "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//errorCode=STRING
		public Assignment getErrorCodeAssignment_1() { return cErrorCodeAssignment_1; }

		//STRING
		public RuleCall getErrorCodeSTRINGTerminalRuleCall_1_0() { return cErrorCodeSTRINGTerminalRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//message=STRING
		public Assignment getMessageAssignment_3() { return cMessageAssignment_3; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_3_0() { return cMessageSTRINGTerminalRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ExceptionMapperElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExceptionMapper");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExceptionMapperKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRestExceptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRestExceptionRestExceptionParserRuleCall_3_0 = (RuleCall)cRestExceptionAssignment_3.eContents().get(0);
		private final Keyword cLessThanSignEqualsSignGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBaseExceptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBaseExceptionBaseExceptionParserRuleCall_5_0 = (RuleCall)cBaseExceptionAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ExceptionMapper:
		//	"ExceptionMapper" name=ID "(" restException=RestException "<=>" baseException=BaseException ")";
		@Override public ParserRule getRule() { return rule; }

		//"ExceptionMapper" name=ID "(" restException=RestException "<=>" baseException=BaseException ")"
		public Group getGroup() { return cGroup; }

		//"ExceptionMapper"
		public Keyword getExceptionMapperKeyword_0() { return cExceptionMapperKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//restException=RestException
		public Assignment getRestExceptionAssignment_3() { return cRestExceptionAssignment_3; }

		//RestException
		public RuleCall getRestExceptionRestExceptionParserRuleCall_3_0() { return cRestExceptionRestExceptionParserRuleCall_3_0; }

		//"<=>"
		public Keyword getLessThanSignEqualsSignGreaterThanSignKeyword_4() { return cLessThanSignEqualsSignGreaterThanSignKeyword_4; }

		//baseException=BaseException
		public Assignment getBaseExceptionAssignment_5() { return cBaseExceptionAssignment_5; }

		//BaseException
		public RuleCall getBaseExceptionBaseExceptionParserRuleCall_5_0() { return cBaseExceptionBaseExceptionParserRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class RestExceptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RestException");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStatusCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStatusCodeRestStatusCodeEnumRuleCall_1_0 = (RuleCall)cStatusCodeAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMessageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessageSTRINGTerminalRuleCall_3_0 = (RuleCall)cMessageAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RestException:
		//	"[" statusCode=RestStatusCode "," message=STRING "]";
		@Override public ParserRule getRule() { return rule; }

		//"[" statusCode=RestStatusCode "," message=STRING "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//statusCode=RestStatusCode
		public Assignment getStatusCodeAssignment_1() { return cStatusCodeAssignment_1; }

		//RestStatusCode
		public RuleCall getStatusCodeRestStatusCodeEnumRuleCall_1_0() { return cStatusCodeRestStatusCodeEnumRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//message=STRING
		public Assignment getMessageAssignment_3() { return cMessageAssignment_3; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_3_0() { return cMessageSTRINGTerminalRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class BlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Block");
		private final Assignment cCodeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cCodeSTRINGTerminalRuleCall_0 = (RuleCall)cCodeAssignment.eContents().get(0);
		
		//Block: //will be expanded later to include actual Java syntax for a block of statements
		////<block> ::= { <block-statements>? }
		//	code=STRING;
		@Override public ParserRule getRule() { return rule; }

		////will be expanded later to include actual Java syntax for a block of statements
		////<block> ::= { <block-statements>? }
		//code=STRING
		public Assignment getCodeAssignment() { return cCodeAssignment; }

		//STRING
		public RuleCall getCodeSTRINGTerminalRuleCall_0() { return cCodeSTRINGTerminalRuleCall_0; }
	}
	
	
	public class RestStatusCodeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RestStatusCode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINFORMATIONALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINFORMATIONALINFORMATIONALKeyword_0_0 = (Keyword)cINFORMATIONALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSUCCESSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSUCCESSSUCCESSKeyword_1_0 = (Keyword)cSUCCESSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cREDIRECTIONEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cREDIRECTIONREDIRECTIONKeyword_2_0 = (Keyword)cREDIRECTIONEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCLIENT_ERROREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCLIENT_ERRORCLIENT_ERRORKeyword_3_0 = (Keyword)cCLIENT_ERROREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSERVER_ERROREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSERVER_ERRORSERVER_ERRORKeyword_4_0 = (Keyword)cSERVER_ERROREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cNETWORK_ERROREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cNETWORK_ERRORNETWORK_ERRORKeyword_5_0 = (Keyword)cNETWORK_ERROREnumLiteralDeclaration_5.eContents().get(0);
		
		//enum RestStatusCode:
		//	INFORMATIONAL | SUCCESS | REDIRECTION | CLIENT_ERROR | SERVER_ERROR | NETWORK_ERROR;
		public EnumRule getRule() { return rule; }

		//INFORMATIONAL | SUCCESS | REDIRECTION | CLIENT_ERROR | SERVER_ERROR | NETWORK_ERROR
		public Alternatives getAlternatives() { return cAlternatives; }

		//INFORMATIONAL
		public EnumLiteralDeclaration getINFORMATIONALEnumLiteralDeclaration_0() { return cINFORMATIONALEnumLiteralDeclaration_0; }

		//"INFORMATIONAL"
		public Keyword getINFORMATIONALINFORMATIONALKeyword_0_0() { return cINFORMATIONALINFORMATIONALKeyword_0_0; }

		//SUCCESS
		public EnumLiteralDeclaration getSUCCESSEnumLiteralDeclaration_1() { return cSUCCESSEnumLiteralDeclaration_1; }

		//"SUCCESS"
		public Keyword getSUCCESSSUCCESSKeyword_1_0() { return cSUCCESSSUCCESSKeyword_1_0; }

		//REDIRECTION
		public EnumLiteralDeclaration getREDIRECTIONEnumLiteralDeclaration_2() { return cREDIRECTIONEnumLiteralDeclaration_2; }

		//"REDIRECTION"
		public Keyword getREDIRECTIONREDIRECTIONKeyword_2_0() { return cREDIRECTIONREDIRECTIONKeyword_2_0; }

		//CLIENT_ERROR
		public EnumLiteralDeclaration getCLIENT_ERROREnumLiteralDeclaration_3() { return cCLIENT_ERROREnumLiteralDeclaration_3; }

		//"CLIENT_ERROR"
		public Keyword getCLIENT_ERRORCLIENT_ERRORKeyword_3_0() { return cCLIENT_ERRORCLIENT_ERRORKeyword_3_0; }

		//SERVER_ERROR
		public EnumLiteralDeclaration getSERVER_ERROREnumLiteralDeclaration_4() { return cSERVER_ERROREnumLiteralDeclaration_4; }

		//"SERVER_ERROR"
		public Keyword getSERVER_ERRORSERVER_ERRORKeyword_4_0() { return cSERVER_ERRORSERVER_ERRORKeyword_4_0; }

		//NETWORK_ERROR
		public EnumLiteralDeclaration getNETWORK_ERROREnumLiteralDeclaration_5() { return cNETWORK_ERROREnumLiteralDeclaration_5; }

		//"NETWORK_ERROR"
		public Keyword getNETWORK_ERRORNETWORK_ERRORKeyword_5_0() { return cNETWORK_ERRORNETWORK_ERRORKeyword_5_0; }
	}
	
	private final DomainModelElements pDomainModel;
	private final TypeElements pType;
	private final RestAPIElements pRestAPI;
	private final PrimitiveTypeElements pPrimitiveType;
	private final DataModelElements pDataModel;
	private final RestModelElements pRestModel;
	private final ModelMapperElements pModelMapper;
	private final TransformationElements pTransformation;
	private final FeatureElements pFeature;
	private final ResourceElements pResource;
	private final ServiceElements pService;
	private final ValidationServiceElements pValidationService;
	private final DataAccessObjectElements pDataAccessObject;
	private final DataModelMethodConclusionElements pDataModelMethodConclusion;
	private final RestModelMethodConclusionElements pRestModelMethodConclusion;
	private final RestExceptionListElements pRestExceptionList;
	private final BaseExceptionElements pBaseException;
	private final ExceptionMapperElements pExceptionMapper;
	private final RestExceptionElements pRestException;
	private final TerminalRule tINTEGER;
	private final TerminalRule tSTRING;
	private final RestStatusCodeElements unknownRuleRestStatusCode;
	private final BlockElements pBlock;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomainModel = new DomainModelElements();
		this.pType = new TypeElements();
		this.pRestAPI = new RestAPIElements();
		this.pPrimitiveType = new PrimitiveTypeElements();
		this.pDataModel = new DataModelElements();
		this.pRestModel = new RestModelElements();
		this.pModelMapper = new ModelMapperElements();
		this.pTransformation = new TransformationElements();
		this.pFeature = new FeatureElements();
		this.pResource = new ResourceElements();
		this.pService = new ServiceElements();
		this.pValidationService = new ValidationServiceElements();
		this.pDataAccessObject = new DataAccessObjectElements();
		this.pDataModelMethodConclusion = new DataModelMethodConclusionElements();
		this.pRestModelMethodConclusion = new RestModelMethodConclusionElements();
		this.pRestExceptionList = new RestExceptionListElements();
		this.pBaseException = new BaseExceptionElements();
		this.pExceptionMapper = new ExceptionMapperElements();
		this.pRestException = new RestExceptionElements();
		this.tINTEGER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INTEGER");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING");
		this.unknownRuleRestStatusCode = new RestStatusCodeElements();
		this.pBlock = new BlockElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DomainModel:
	//	elements+=Type* apis+=RestAPI*;
	public DomainModelElements getDomainModelAccess() {
		return pDomainModel;
	}
	
	public ParserRule getDomainModelRule() {
		return getDomainModelAccess().getRule();
	}

	//Type:
	//	PrimitiveType | DataModel | RestModel | ModelMapper;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//RestAPI:
	//	"<BEGIN_REST_API>" resource=Resource service+=Service* dao+=DataAccessObject* exceptionMapper+=ExceptionMapper*
	//	"<END_REST_API>";
	public RestAPIElements getRestAPIAccess() {
		return pRestAPI;
	}
	
	public ParserRule getRestAPIRule() {
		return getRestAPIAccess().getRule();
	}

	//PrimitiveType:
	//	"primitiveType" name=ID;
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return pPrimitiveType;
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}

	//DataModel:
	//	"DataModel" name=ID ("extends" superType=[DataModel])? "{" "id" ":" id=INTEGER features+=Feature* "}";
	public DataModelElements getDataModelAccess() {
		return pDataModel;
	}
	
	public ParserRule getDataModelRule() {
		return getDataModelAccess().getRule();
	}

	//RestModel:
	//	"RestModel" name=ID ("extends" superType=[RestModel])? "{" "id" ":" id=INTEGER features+=Feature* "self" ":"
	//	self=STRING "}";
	public RestModelElements getRestModelAccess() {
		return pRestModel;
	}
	
	public ParserRule getRestModelRule() {
		return getRestModelAccess().getRule();
	}

	//ModelMapper:
	//	"ModelMapper" name=ID "{" transformation+=Transformation* "}";
	public ModelMapperElements getModelMapperAccess() {
		return pModelMapper;
	}
	
	public ParserRule getModelMapperRule() {
		return getModelMapperAccess().getRule();
	}

	//Transformation:
	//	"(" dataModel=[DataModel] "<=>" restModel=[RestModel] ")";
	public TransformationElements getTransformationAccess() {
		return pTransformation;
	}
	
	public ParserRule getTransformationRule() {
		return getTransformationAccess().getRule();
	}

	//Feature:
	//	many?="many"? name=ID ":" type=[Type];
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}

	//Resource:
	//	"Resource" name=ID "{" service+=[Service]+ exceptionMapper=[ExceptionMapper] "create" "(" createRestModel=[RestModel]
	//	")" "{" createValService=ValidationService createMethod=Block createConclusion=RestModelMethodConclusion "}" "find"
	//	"(" findby=INTEGER ")" "{" findMethod=Block findConclusion=RestModelMethodConclusion "}" "update" "(" updateby=INTEGER
	//	"," updateRestModel=[RestModel] ")" "{" updateValService=ValidationService updateMethod=Block
	//	updateConclusion=RestModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{" deleteMethod=Block ("throw"
	//	exception4=RestExceptionList)? "}" "}";
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}

	//Service:
	//	"Service" name=ID "{" dao+=[DataAccessObject]+ "create" "(" createDataModel=[DataModel] ")" "{" createMethod=Block
	//	createConclusion=DataModelMethodConclusion "}" "find" "(" findby=INTEGER ")" "{" findMethod=Block
	//	findConclusion=DataModelMethodConclusion "}" "update" "(" updateby=INTEGER "," updateDataModel=[DataModel] ")" "{"
	//	updateMethod=Block updateConclusion=DataModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{"
	//	deleteMethod=Block ("throw" exception4=RestExceptionList)? "}" "}";
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//ValidationService:
	//	"validate" "(" restModel=[RestModel] ")" "{" block=Block "}";
	public ValidationServiceElements getValidationServiceAccess() {
		return pValidationService;
	}
	
	public ParserRule getValidationServiceRule() {
		return getValidationServiceAccess().getRule();
	}

	//DataAccessObject:
	//	"DAO" name=ID "{" "create" "(" createDataModel=[DataModel] ")" "{" createMethod=Block
	//	createConclusion=DataModelMethodConclusion "}" "find" "(" findby=INTEGER ")" "{" findMethod=Block
	//	findConclusion=DataModelMethodConclusion "}" "update" "(" updateby=INTEGER "," updateDataModel=[DataModel] ")" "{"
	//	updateMethod=Block updateConclusion=DataModelMethodConclusion "}" "delete" "(" deleteby=INTEGER ")" "{"
	//	deleteMethod=Block ("throw" exceptions=RestExceptionList)? "}" "}";
	public DataAccessObjectElements getDataAccessObjectAccess() {
		return pDataAccessObject;
	}
	
	public ParserRule getDataAccessObjectRule() {
		return getDataAccessObjectAccess().getRule();
	}

	//DataModelMethodConclusion:
	//	"return" dataModel=[DataModel] | "throw" exceptions+=RestExceptionList;
	public DataModelMethodConclusionElements getDataModelMethodConclusionAccess() {
		return pDataModelMethodConclusion;
	}
	
	public ParserRule getDataModelMethodConclusionRule() {
		return getDataModelMethodConclusionAccess().getRule();
	}

	//RestModelMethodConclusion:
	//	"return" restModel=[RestModel] | "throw" exception+=RestExceptionList;
	public RestModelMethodConclusionElements getRestModelMethodConclusionAccess() {
		return pRestModelMethodConclusion;
	}
	
	public ParserRule getRestModelMethodConclusionRule() {
		return getRestModelMethodConclusionAccess().getRule();
	}

	//RestExceptionList:
	//	exception+=RestException+;
	public RestExceptionListElements getRestExceptionListAccess() {
		return pRestExceptionList;
	}
	
	public ParserRule getRestExceptionListRule() {
		return getRestExceptionListAccess().getRule();
	}

	//BaseException:
	//	"[" errorCode=STRING "," message=STRING "]";
	public BaseExceptionElements getBaseExceptionAccess() {
		return pBaseException;
	}
	
	public ParserRule getBaseExceptionRule() {
		return getBaseExceptionAccess().getRule();
	}

	//ExceptionMapper:
	//	"ExceptionMapper" name=ID "(" restException=RestException "<=>" baseException=BaseException ")";
	public ExceptionMapperElements getExceptionMapperAccess() {
		return pExceptionMapper;
	}
	
	public ParserRule getExceptionMapperRule() {
		return getExceptionMapperAccess().getRule();
	}

	//RestException:
	//	"[" statusCode=RestStatusCode "," message=STRING "]";
	public RestExceptionElements getRestExceptionAccess() {
		return pRestException;
	}
	
	public ParserRule getRestExceptionRule() {
		return getRestExceptionAccess().getRule();
	}

	//terminal INTEGER:
	//	"0".."9"+;
	public TerminalRule getINTEGERRule() {
		return tINTEGER;
	} 

	//terminal STRING:
	//	"\"" ("0".."9" | "A".."Z" | "a".."z" | "_" | ":" | "/" | "." | " ")* "\"";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	} 

	//enum RestStatusCode:
	//	INFORMATIONAL | SUCCESS | REDIRECTION | CLIENT_ERROR | SERVER_ERROR | NETWORK_ERROR;
	public RestStatusCodeElements getRestStatusCodeAccess() {
		return unknownRuleRestStatusCode;
	}
	
	public EnumRule getRestStatusCodeRule() {
		return getRestStatusCodeAccess().getRule();
	}

	//Block: //will be expanded later to include actual Java syntax for a block of statements
	////<block> ::= { <block-statements>? }
	//	code=STRING;
	public BlockElements getBlockAccess() {
		return pBlock;
	}
	
	public ParserRule getBlockRule() {
		return getBlockAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}

grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"



DomainModel:
	(elements += Type)*
	(apis += RestAPI)*
;
	
Type:
	PrimitiveType | DataModel | RestModel | ModelMapper
;

RestAPI:
	'<BEGIN_REST_API>'
	(resource = Resource)
	(service += Service)*
	(dao += DataAccessObject)*
	(exceptionMapper += ExceptionMapper)*
	'<END_REST_API>'
;

PrimitiveType:
	'primitiveType' name = ID
;

DataModel:
	'DataModel' name = ID ('extends' superType = [DataModel])? '{'
		'id' ':' id = INTEGER
		(features += Feature)*
	'}'
;

RestModel:
	'RestModel' name = ID ('extends' superType = [RestModel])? '{'
		'id' ':' id = INTEGER
		(features += Feature)*
		'self' ':' self = STRING
	'}'
;

ModelMapper:
	'ModelMapper' name = ID '{'
		(transformation += Transformation)*
	'}'
;

Transformation:
	'(' (dataModel = [DataModel]) '<=>' (restModel = [RestModel]) ')'
;

Feature:
	(many ?= 'many')? name = ID ':' type = [Type]
;

Resource:
	'Resource' name = ID '{'
		(service += [Service])+
		(exceptionMapper = [ExceptionMapper])
		'create' '(' createRestModel = [RestModel] ')' '{'
			(createValService = ValidationService)
			(createMethod = Block)
			createConclusion = RestModelMethodConclusion
		'}'
		'find' '(' findby = INTEGER ')' '{' 
			(findMethod = Block)
			findConclusion = RestModelMethodConclusion
		'}'
		'update' '(' updateby = INTEGER ',' updateRestModel = [RestModel] ')' '{'
			(updateValService = ValidationService)
			(updateMethod = Block)
			updateConclusion = RestModelMethodConclusion
		'}'
		'delete' '(' deleteby = INTEGER ')' '{'
			(deleteMethod = Block)
			('throw' exception4 = RestExceptionList)?
		'}'
	'}'
;

Service:
	'Service' name = ID '{'
		(dao += [DataAccessObject])+
		'create' '(' createDataModel = [DataModel] ')' '{'
			(createMethod = Block)
			createConclusion = DataModelMethodConclusion
		'}'
		'find' '(' findby = INTEGER ')' '{' 
			(findMethod = Block)
			findConclusion = DataModelMethodConclusion
		'}'
		'update' '(' updateby = INTEGER ',' updateDataModel = [DataModel] ')' '{'
			(updateMethod = Block)
			updateConclusion = DataModelMethodConclusion
		'}'
		'delete' '(' deleteby = INTEGER ')' '{'
			(deleteMethod = Block)
			('throw' exception4 = RestExceptionList)?
		'}'
	'}'
;

ValidationService:
	'validate' '(' restModel = [RestModel] ')' '{'
		block = Block
	'}'
;

DataAccessObject:
	'DAO' name = ID '{'
		'create' '(' createDataModel = [DataModel] ')' '{'
			(createMethod = Block)
			createConclusion = DataModelMethodConclusion
		'}'
		'find' '(' findby = INTEGER ')' '{' 
			(findMethod = Block)
			findConclusion = DataModelMethodConclusion
		'}'
		'update' '(' updateby = INTEGER ',' updateDataModel = [DataModel] ')' '{'
			(updateMethod = Block)
			updateConclusion = DataModelMethodConclusion
		'}'
		'delete' '(' deleteby = INTEGER ')' '{'
			(deleteMethod = Block)
			('throw' exceptions = RestExceptionList)?
		'}'
	'}'
;

DataModelMethodConclusion:
	('return' dataModel = [DataModel]) | ('throw' exceptions += RestExceptionList)
;

RestModelMethodConclusion:
	('return' restModel = [RestModel]) | ('throw' exception += RestExceptionList)
;

RestExceptionList:
	(exception += RestException)+
;

BaseException:
	'[' errorCode = STRING ',' message = STRING ']'
;

ExceptionMapper:
	'ExceptionMapper' name = ID '(' (restException = RestException) '<=>' (baseException = BaseException) ')'
;

RestException:
	'[' statusCode = RestStatusCode ','	message = STRING ']'
;

terminal INTEGER:
	('0'..'9')+
;

terminal STRING:
	'\"'('0'..'9'|'A'..'Z'|'a'..'z'|'_'|':'|'/'|'.'|' ')*'\"'
;

enum RestStatusCode:
	INFORMATIONAL = 'INFORMATIONAL' |
	SUCCESS = 'SUCCESS' |
	REDIRECTION = 'REDIRECTION' |
	CLIENT_ERROR = 'CLIENT_ERROR' |
	SERVER_ERROR = 'SERVER_ERROR' |
	NETWORK_ERROR = 'NETWORK_ERROR'
;

Block:
	//could be expanded later to include actual Java syntax for a block of statements
	//<block> ::= { <block-statements>? }
	code = STRING
;



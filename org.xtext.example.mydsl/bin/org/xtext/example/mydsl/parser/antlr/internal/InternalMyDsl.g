/*
 * generated by Xtext
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DomainModel";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDomainModel
entryRuleDomainModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDomainModelRule()); }
	 iv_ruleDomainModel=ruleDomainModel 
	 { $current=$iv_ruleDomainModel.current; } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDomainModelAccess().getElementsTypeParserRuleCall_0_0()); 
	    }
		lv_elements_0_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDomainModelAccess().getApisRestAPIParserRuleCall_1_0()); 
	    }
		lv_apis_1_0=ruleRestAPI		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDomainModelRule());
	        }
       		add(
       			$current, 
       			"apis",
        		lv_apis_1_0, 
        		"RestAPI");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); 
    }
    this_PrimitiveType_0=rulePrimitiveType
    { 
        $current = $this_PrimitiveType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDataModelParserRuleCall_1()); 
    }
    this_DataModel_1=ruleDataModel
    { 
        $current = $this_DataModel_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getRestModelParserRuleCall_2()); 
    }
    this_RestModel_2=ruleRestModel
    { 
        $current = $this_RestModel_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getModelMapperParserRuleCall_3()); 
    }
    this_ModelMapper_3=ruleModelMapper
    { 
        $current = $this_ModelMapper_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRestAPI
entryRuleRestAPI returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestAPIRule()); }
	 iv_ruleRestAPI=ruleRestAPI 
	 { $current=$iv_ruleRestAPI.current; } 
	 EOF 
;

// Rule RestAPI
ruleRestAPI returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<BEGIN_REST_API>' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRestAPIAccess().getBEGIN_REST_APIKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestAPIAccess().getResourceResourceParserRuleCall_1_0()); 
	    }
		lv_resource_1_0=ruleResource		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestAPIRule());
	        }
       		set(
       			$current, 
       			"resource",
        		lv_resource_1_0, 
        		"Resource");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRestAPIAccess().getServiceServiceParserRuleCall_2_0()); 
	    }
		lv_service_2_0=ruleService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestAPIRule());
	        }
       		add(
       			$current, 
       			"service",
        		lv_service_2_0, 
        		"Service");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRestAPIAccess().getDaoDataAccessObjectParserRuleCall_3_0()); 
	    }
		lv_dao_3_0=ruleDataAccessObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestAPIRule());
	        }
       		add(
       			$current, 
       			"dao",
        		lv_dao_3_0, 
        		"DataAccessObject");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRestAPIAccess().getExceptionMapperExceptionMapperParserRuleCall_4_0()); 
	    }
		lv_exceptionMapper_4_0=ruleExceptionMapper		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestAPIRule());
	        }
       		add(
       			$current, 
       			"exceptionMapper",
        		lv_exceptionMapper_4_0, 
        		"ExceptionMapper");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='<END_REST_API>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRestAPIAccess().getEND_REST_APIKeyword_5());
    }
)
;





// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	 iv_rulePrimitiveType=rulePrimitiveType 
	 { $current=$iv_rulePrimitiveType.current; } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='primitiveType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPrimitiveTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleDataModel
entryRuleDataModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataModelRule()); }
	 iv_ruleDataModel=ruleDataModel 
	 { $current=$iv_ruleDataModel.current; } 
	 EOF 
;

// Rule DataModel
ruleDataModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DataModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataModelAccess().getDataModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDataModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataModelAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataModelRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getDataModelAccess().getSuperTypeDataModelCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_5='id' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataModelAccess().getIdKeyword_4());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataModelAccess().getColonKeyword_5());
    }
(
(
		lv_id_7_0=RULE_INTEGER
		{
			newLeafNode(lv_id_7_0, grammarAccess.getDataModelAccess().getIdINTEGERTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_7_0, 
        		"INTEGER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDataModelAccess().getFeaturesFeatureParserRuleCall_7_0()); 
	    }
		lv_features_8_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataModelRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_8_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleRestModel
entryRuleRestModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestModelRule()); }
	 iv_ruleRestModel=ruleRestModel 
	 { $current=$iv_ruleRestModel.current; } 
	 EOF 
;

// Rule RestModel
ruleRestModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RestModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRestModelAccess().getRestModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRestModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRestModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRestModelAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRestModelRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRestModelAccess().getSuperTypeRestModelCrossReference_2_1_0()); 
	}

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRestModelAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_5='id' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRestModelAccess().getIdKeyword_4());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRestModelAccess().getColonKeyword_5());
    }
(
(
		lv_id_7_0=RULE_INTEGER
		{
			newLeafNode(lv_id_7_0, grammarAccess.getRestModelAccess().getIdINTEGERTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRestModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_7_0, 
        		"INTEGER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRestModelAccess().getFeaturesFeatureParserRuleCall_7_0()); 
	    }
		lv_features_8_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestModelRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_8_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='self' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRestModelAccess().getSelfKeyword_8());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRestModelAccess().getColonKeyword_9());
    }
(
(
		lv_self_11_0=RULE_STRING
		{
			newLeafNode(lv_self_11_0, grammarAccess.getRestModelAccess().getSelfSTRINGTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRestModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"self",
        		lv_self_11_0, 
        		"STRING");
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRestModelAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleModelMapper
entryRuleModelMapper returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelMapperRule()); }
	 iv_ruleModelMapper=ruleModelMapper 
	 { $current=$iv_ruleModelMapper.current; } 
	 EOF 
;

// Rule ModelMapper
ruleModelMapper returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ModelMapper' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelMapperAccess().getModelMapperKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModelMapperAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelMapperRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelMapperAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelMapperAccess().getTransformationTransformationParserRuleCall_3_0()); 
	    }
		lv_transformation_3_0=ruleTransformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelMapperRule());
	        }
       		add(
       			$current, 
       			"transformation",
        		lv_transformation_3_0, 
        		"Transformation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelMapperAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTransformation
entryRuleTransformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransformationRule()); }
	 iv_ruleTransformation=ruleTransformation 
	 { $current=$iv_ruleTransformation.current; } 
	 EOF 
;

// Rule Transformation
ruleTransformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTransformationAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransformationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTransformationAccess().getDataModelDataModelCrossReference_1_0()); 
	}

)
)	otherlv_2='<=>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTransformationAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransformationRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getTransformationAccess().getRestModelRestModelCrossReference_3_0()); 
	}

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTransformationAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	 iv_ruleFeature=ruleFeature 
	 { $current=$iv_ruleFeature.current; } 
	 EOF 
;

// Rule Feature
ruleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_many_0_0=	'many' 
    {
        newLeafNode(lv_many_0_0, grammarAccess.getFeatureAccess().getManyManyKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "many", true, "many");
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeatureAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getFeatureAccess().getTypeTypeCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	 iv_ruleResource=ruleResource 
	 { $current=$iv_ruleResource.current; } 
	 EOF 
;

// Rule Resource
ruleResource returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Resource' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceAccess().getResourceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getResourceAccess().getServiceServiceCrossReference_3_0()); 
	}

)
)+(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getResourceAccess().getExceptionMapperExceptionMapperCrossReference_4_0()); 
	}

)
)	otherlv_5='create' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getResourceAccess().getCreateKeyword_5());
    }
	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getResourceAccess().getLeftParenthesisKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getResourceAccess().getCreateRestModelRestModelCrossReference_7_0()); 
	}

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getResourceAccess().getRightParenthesisKeyword_8());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getResourceAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getCreateValServiceValidationServiceParserRuleCall_10_0()); 
	    }
		lv_createValService_10_0=ruleValidationService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"createValService",
        		lv_createValService_10_0, 
        		"ValidationService");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getCreateMethodBlockParserRuleCall_11_0()); 
	    }
		lv_createMethod_11_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"createMethod",
        		lv_createMethod_11_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getCreateConclusionRestModelMethodConclusionParserRuleCall_12_0()); 
	    }
		lv_createConclusion_12_0=ruleRestModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"createConclusion",
        		lv_createConclusion_12_0, 
        		"RestModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getResourceAccess().getRightCurlyBracketKeyword_13());
    }
	otherlv_14='find' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getResourceAccess().getFindKeyword_14());
    }
	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getResourceAccess().getLeftParenthesisKeyword_15());
    }
(
(
		lv_findby_16_0=RULE_INTEGER
		{
			newLeafNode(lv_findby_16_0, grammarAccess.getResourceAccess().getFindbyINTEGERTerminalRuleCall_16_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"findby",
        		lv_findby_16_0, 
        		"INTEGER");
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getResourceAccess().getRightParenthesisKeyword_17());
    }
	otherlv_18='{' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getResourceAccess().getLeftCurlyBracketKeyword_18());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getFindMethodBlockParserRuleCall_19_0()); 
	    }
		lv_findMethod_19_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"findMethod",
        		lv_findMethod_19_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getFindConclusionRestModelMethodConclusionParserRuleCall_20_0()); 
	    }
		lv_findConclusion_20_0=ruleRestModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"findConclusion",
        		lv_findConclusion_20_0, 
        		"RestModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getResourceAccess().getRightCurlyBracketKeyword_21());
    }
	otherlv_22='update' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getResourceAccess().getUpdateKeyword_22());
    }
	otherlv_23='(' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getResourceAccess().getLeftParenthesisKeyword_23());
    }
(
(
		lv_updateby_24_0=RULE_INTEGER
		{
			newLeafNode(lv_updateby_24_0, grammarAccess.getResourceAccess().getUpdatebyINTEGERTerminalRuleCall_24_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"updateby",
        		lv_updateby_24_0, 
        		"INTEGER");
	    }

)
)	otherlv_25=',' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getResourceAccess().getCommaKeyword_25());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
        }
	otherlv_26=RULE_ID
	{
		newLeafNode(otherlv_26, grammarAccess.getResourceAccess().getUpdateRestModelRestModelCrossReference_26_0()); 
	}

)
)	otherlv_27=')' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getResourceAccess().getRightParenthesisKeyword_27());
    }
	otherlv_28='{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getResourceAccess().getLeftCurlyBracketKeyword_28());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getUpdateValServiceValidationServiceParserRuleCall_29_0()); 
	    }
		lv_updateValService_29_0=ruleValidationService		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"updateValService",
        		lv_updateValService_29_0, 
        		"ValidationService");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getUpdateMethodBlockParserRuleCall_30_0()); 
	    }
		lv_updateMethod_30_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"updateMethod",
        		lv_updateMethod_30_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getUpdateConclusionRestModelMethodConclusionParserRuleCall_31_0()); 
	    }
		lv_updateConclusion_31_0=ruleRestModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"updateConclusion",
        		lv_updateConclusion_31_0, 
        		"RestModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_32='}' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getResourceAccess().getRightCurlyBracketKeyword_32());
    }
	otherlv_33='delete' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getResourceAccess().getDeleteKeyword_33());
    }
	otherlv_34='(' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getResourceAccess().getLeftParenthesisKeyword_34());
    }
(
(
		lv_deleteby_35_0=RULE_INTEGER
		{
			newLeafNode(lv_deleteby_35_0, grammarAccess.getResourceAccess().getDeletebyINTEGERTerminalRuleCall_35_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"deleteby",
        		lv_deleteby_35_0, 
        		"INTEGER");
	    }

)
)	otherlv_36=')' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getResourceAccess().getRightParenthesisKeyword_36());
    }
	otherlv_37='{' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getResourceAccess().getLeftCurlyBracketKeyword_37());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getDeleteMethodBlockParserRuleCall_38_0()); 
	    }
		lv_deleteMethod_38_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"deleteMethod",
        		lv_deleteMethod_38_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_39='throw' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getResourceAccess().getThrowKeyword_39_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAccess().getException4RestExceptionListParserRuleCall_39_1_0()); 
	    }
		lv_exception4_40_0=ruleRestExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceRule());
	        }
       		set(
       			$current, 
       			"exception4",
        		lv_exception4_40_0, 
        		"RestExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_41='}' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getResourceAccess().getRightCurlyBracketKeyword_40());
    }
	otherlv_42='}' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getResourceAccess().getRightCurlyBracketKeyword_41());
    }
)
;





// Entry rule entryRuleService
entryRuleService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	 iv_ruleService=ruleService 
	 { $current=$iv_ruleService.current; } 
	 EOF 
;

// Rule Service
ruleService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Service' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getDaoDataAccessObjectCrossReference_3_0()); 
	}

)
)+	otherlv_4='create' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getCreateKeyword_4());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getServiceAccess().getLeftParenthesisKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getServiceAccess().getCreateDataModelDataModelCrossReference_6_0()); 
	}

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getServiceAccess().getRightParenthesisKeyword_7());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getCreateMethodBlockParserRuleCall_9_0()); 
	    }
		lv_createMethod_9_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"createMethod",
        		lv_createMethod_9_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getCreateConclusionDataModelMethodConclusionParserRuleCall_10_0()); 
	    }
		lv_createConclusion_10_0=ruleDataModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"createConclusion",
        		lv_createConclusion_10_0, 
        		"DataModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_11());
    }
	otherlv_12='find' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getServiceAccess().getFindKeyword_12());
    }
	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getServiceAccess().getLeftParenthesisKeyword_13());
    }
(
(
		lv_findby_14_0=RULE_INTEGER
		{
			newLeafNode(lv_findby_14_0, grammarAccess.getServiceAccess().getFindbyINTEGERTerminalRuleCall_14_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"findby",
        		lv_findby_14_0, 
        		"INTEGER");
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getServiceAccess().getRightParenthesisKeyword_15());
    }
	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_16());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getFindMethodBlockParserRuleCall_17_0()); 
	    }
		lv_findMethod_17_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"findMethod",
        		lv_findMethod_17_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getFindConclusionDataModelMethodConclusionParserRuleCall_18_0()); 
	    }
		lv_findConclusion_18_0=ruleDataModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"findConclusion",
        		lv_findConclusion_18_0, 
        		"DataModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_19());
    }
	otherlv_20='update' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getServiceAccess().getUpdateKeyword_20());
    }
	otherlv_21='(' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getServiceAccess().getLeftParenthesisKeyword_21());
    }
(
(
		lv_updateby_22_0=RULE_INTEGER
		{
			newLeafNode(lv_updateby_22_0, grammarAccess.getServiceAccess().getUpdatebyINTEGERTerminalRuleCall_22_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"updateby",
        		lv_updateby_22_0, 
        		"INTEGER");
	    }

)
)	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getServiceAccess().getCommaKeyword_23());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
        }
	otherlv_24=RULE_ID
	{
		newLeafNode(otherlv_24, grammarAccess.getServiceAccess().getUpdateDataModelDataModelCrossReference_24_0()); 
	}

)
)	otherlv_25=')' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getServiceAccess().getRightParenthesisKeyword_25());
    }
	otherlv_26='{' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_26());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getUpdateMethodBlockParserRuleCall_27_0()); 
	    }
		lv_updateMethod_27_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"updateMethod",
        		lv_updateMethod_27_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getUpdateConclusionDataModelMethodConclusionParserRuleCall_28_0()); 
	    }
		lv_updateConclusion_28_0=ruleDataModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"updateConclusion",
        		lv_updateConclusion_28_0, 
        		"DataModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_29='}' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_29());
    }
	otherlv_30='delete' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getServiceAccess().getDeleteKeyword_30());
    }
	otherlv_31='(' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getServiceAccess().getLeftParenthesisKeyword_31());
    }
(
(
		lv_deleteby_32_0=RULE_INTEGER
		{
			newLeafNode(lv_deleteby_32_0, grammarAccess.getServiceAccess().getDeletebyINTEGERTerminalRuleCall_32_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"deleteby",
        		lv_deleteby_32_0, 
        		"INTEGER");
	    }

)
)	otherlv_33=')' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getServiceAccess().getRightParenthesisKeyword_33());
    }
	otherlv_34='{' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_34());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getDeleteMethodBlockParserRuleCall_35_0()); 
	    }
		lv_deleteMethod_35_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"deleteMethod",
        		lv_deleteMethod_35_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_36='throw' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getServiceAccess().getThrowKeyword_36_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getException4RestExceptionListParserRuleCall_36_1_0()); 
	    }
		lv_exception4_37_0=ruleRestExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"exception4",
        		lv_exception4_37_0, 
        		"RestExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_38='}' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_37());
    }
	otherlv_39='}' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_38());
    }
)
;





// Entry rule entryRuleValidationService
entryRuleValidationService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidationServiceRule()); }
	 iv_ruleValidationService=ruleValidationService 
	 { $current=$iv_ruleValidationService.current; } 
	 EOF 
;

// Rule ValidationService
ruleValidationService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='validate' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getValidationServiceAccess().getValidateKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValidationServiceAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getValidationServiceRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getValidationServiceAccess().getRestModelRestModelCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getValidationServiceAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getValidationServiceAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValidationServiceAccess().getBlockBlockParserRuleCall_5_0()); 
	    }
		lv_block_5_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValidationServiceRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_5_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getValidationServiceAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleDataAccessObject
entryRuleDataAccessObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataAccessObjectRule()); }
	 iv_ruleDataAccessObject=ruleDataAccessObject 
	 { $current=$iv_ruleDataAccessObject.current; } 
	 EOF 
;

// Rule DataAccessObject
ruleDataAccessObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DAO' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataAccessObjectAccess().getDAOKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDataAccessObjectAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAccessObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataAccessObjectAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='create' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataAccessObjectAccess().getCreateKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataAccessObjectAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAccessObjectRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getDataAccessObjectAccess().getCreateDataModelDataModelCrossReference_5_0()); 
	}

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataAccessObjectAccess().getRightParenthesisKeyword_6());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataAccessObjectAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessObjectAccess().getCreateMethodBlockParserRuleCall_8_0()); 
	    }
		lv_createMethod_8_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessObjectRule());
	        }
       		set(
       			$current, 
       			"createMethod",
        		lv_createMethod_8_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessObjectAccess().getCreateConclusionDataModelMethodConclusionParserRuleCall_9_0()); 
	    }
		lv_createConclusion_9_0=ruleDataModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessObjectRule());
	        }
       		set(
       			$current, 
       			"createConclusion",
        		lv_createConclusion_9_0, 
        		"DataModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDataAccessObjectAccess().getRightCurlyBracketKeyword_10());
    }
	otherlv_11='find' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataAccessObjectAccess().getFindKeyword_11());
    }
	otherlv_12='(' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDataAccessObjectAccess().getLeftParenthesisKeyword_12());
    }
(
(
		lv_findby_13_0=RULE_INTEGER
		{
			newLeafNode(lv_findby_13_0, grammarAccess.getDataAccessObjectAccess().getFindbyINTEGERTerminalRuleCall_13_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAccessObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"findby",
        		lv_findby_13_0, 
        		"INTEGER");
	    }

)
)	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDataAccessObjectAccess().getRightParenthesisKeyword_14());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDataAccessObjectAccess().getLeftCurlyBracketKeyword_15());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessObjectAccess().getFindMethodBlockParserRuleCall_16_0()); 
	    }
		lv_findMethod_16_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessObjectRule());
	        }
       		set(
       			$current, 
       			"findMethod",
        		lv_findMethod_16_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessObjectAccess().getFindConclusionDataModelMethodConclusionParserRuleCall_17_0()); 
	    }
		lv_findConclusion_17_0=ruleDataModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessObjectRule());
	        }
       		set(
       			$current, 
       			"findConclusion",
        		lv_findConclusion_17_0, 
        		"DataModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDataAccessObjectAccess().getRightCurlyBracketKeyword_18());
    }
	otherlv_19='update' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDataAccessObjectAccess().getUpdateKeyword_19());
    }
	otherlv_20='(' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDataAccessObjectAccess().getLeftParenthesisKeyword_20());
    }
(
(
		lv_updateby_21_0=RULE_INTEGER
		{
			newLeafNode(lv_updateby_21_0, grammarAccess.getDataAccessObjectAccess().getUpdatebyINTEGERTerminalRuleCall_21_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAccessObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"updateby",
        		lv_updateby_21_0, 
        		"INTEGER");
	    }

)
)	otherlv_22=',' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getDataAccessObjectAccess().getCommaKeyword_22());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAccessObjectRule());
	        }
        }
	otherlv_23=RULE_ID
	{
		newLeafNode(otherlv_23, grammarAccess.getDataAccessObjectAccess().getUpdateDataModelDataModelCrossReference_23_0()); 
	}

)
)	otherlv_24=')' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getDataAccessObjectAccess().getRightParenthesisKeyword_24());
    }
	otherlv_25='{' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getDataAccessObjectAccess().getLeftCurlyBracketKeyword_25());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessObjectAccess().getUpdateMethodBlockParserRuleCall_26_0()); 
	    }
		lv_updateMethod_26_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessObjectRule());
	        }
       		set(
       			$current, 
       			"updateMethod",
        		lv_updateMethod_26_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessObjectAccess().getUpdateConclusionDataModelMethodConclusionParserRuleCall_27_0()); 
	    }
		lv_updateConclusion_27_0=ruleDataModelMethodConclusion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessObjectRule());
	        }
       		set(
       			$current, 
       			"updateConclusion",
        		lv_updateConclusion_27_0, 
        		"DataModelMethodConclusion");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_28='}' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getDataAccessObjectAccess().getRightCurlyBracketKeyword_28());
    }
	otherlv_29='delete' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getDataAccessObjectAccess().getDeleteKeyword_29());
    }
	otherlv_30='(' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getDataAccessObjectAccess().getLeftParenthesisKeyword_30());
    }
(
(
		lv_deleteby_31_0=RULE_INTEGER
		{
			newLeafNode(lv_deleteby_31_0, grammarAccess.getDataAccessObjectAccess().getDeletebyINTEGERTerminalRuleCall_31_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataAccessObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"deleteby",
        		lv_deleteby_31_0, 
        		"INTEGER");
	    }

)
)	otherlv_32=')' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getDataAccessObjectAccess().getRightParenthesisKeyword_32());
    }
	otherlv_33='{' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getDataAccessObjectAccess().getLeftCurlyBracketKeyword_33());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessObjectAccess().getDeleteMethodBlockParserRuleCall_34_0()); 
	    }
		lv_deleteMethod_34_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessObjectRule());
	        }
       		set(
       			$current, 
       			"deleteMethod",
        		lv_deleteMethod_34_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_35='throw' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getDataAccessObjectAccess().getThrowKeyword_35_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataAccessObjectAccess().getExceptionsRestExceptionListParserRuleCall_35_1_0()); 
	    }
		lv_exceptions_36_0=ruleRestExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataAccessObjectRule());
	        }
       		set(
       			$current, 
       			"exceptions",
        		lv_exceptions_36_0, 
        		"RestExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_37='}' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getDataAccessObjectAccess().getRightCurlyBracketKeyword_36());
    }
	otherlv_38='}' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getDataAccessObjectAccess().getRightCurlyBracketKeyword_37());
    }
)
;





// Entry rule entryRuleDataModelMethodConclusion
entryRuleDataModelMethodConclusion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataModelMethodConclusionRule()); }
	 iv_ruleDataModelMethodConclusion=ruleDataModelMethodConclusion 
	 { $current=$iv_ruleDataModelMethodConclusion.current; } 
	 EOF 
;

// Rule DataModelMethodConclusion
ruleDataModelMethodConclusion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='return' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataModelMethodConclusionAccess().getReturnKeyword_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataModelMethodConclusionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDataModelMethodConclusionAccess().getDataModelDataModelCrossReference_0_1_0()); 
	}

)
))
    |(	otherlv_2='throw' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataModelMethodConclusionAccess().getThrowKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataModelMethodConclusionAccess().getExceptionsRestExceptionListParserRuleCall_1_1_0()); 
	    }
		lv_exceptions_3_0=ruleRestExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataModelMethodConclusionRule());
	        }
       		add(
       			$current, 
       			"exceptions",
        		lv_exceptions_3_0, 
        		"RestExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleRestModelMethodConclusion
entryRuleRestModelMethodConclusion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestModelMethodConclusionRule()); }
	 iv_ruleRestModelMethodConclusion=ruleRestModelMethodConclusion 
	 { $current=$iv_ruleRestModelMethodConclusion.current; } 
	 EOF 
;

// Rule RestModelMethodConclusion
ruleRestModelMethodConclusion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='return' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRestModelMethodConclusionAccess().getReturnKeyword_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRestModelMethodConclusionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRestModelMethodConclusionAccess().getRestModelRestModelCrossReference_0_1_0()); 
	}

)
))
    |(	otherlv_2='throw' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRestModelMethodConclusionAccess().getThrowKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestModelMethodConclusionAccess().getExceptionRestExceptionListParserRuleCall_1_1_0()); 
	    }
		lv_exception_3_0=ruleRestExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestModelMethodConclusionRule());
	        }
       		add(
       			$current, 
       			"exception",
        		lv_exception_3_0, 
        		"RestExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleRestExceptionList
entryRuleRestExceptionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestExceptionListRule()); }
	 iv_ruleRestExceptionList=ruleRestExceptionList 
	 { $current=$iv_ruleRestExceptionList.current; } 
	 EOF 
;

// Rule RestExceptionList
ruleRestExceptionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestExceptionListAccess().getExceptionRestExceptionParserRuleCall_0()); 
	    }
		lv_exception_0_0=ruleRestException		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestExceptionListRule());
	        }
       		add(
       			$current, 
       			"exception",
        		lv_exception_0_0, 
        		"RestException");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleBaseException
entryRuleBaseException returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseExceptionRule()); }
	 iv_ruleBaseException=ruleBaseException 
	 { $current=$iv_ruleBaseException.current; } 
	 EOF 
;

// Rule BaseException
ruleBaseException returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBaseExceptionAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_errorCode_1_0=RULE_STRING
		{
			newLeafNode(lv_errorCode_1_0, grammarAccess.getBaseExceptionAccess().getErrorCodeSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseExceptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"errorCode",
        		lv_errorCode_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBaseExceptionAccess().getCommaKeyword_2());
    }
(
(
		lv_message_3_0=RULE_STRING
		{
			newLeafNode(lv_message_3_0, grammarAccess.getBaseExceptionAccess().getMessageSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseExceptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBaseExceptionAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleExceptionMapper
entryRuleExceptionMapper returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExceptionMapperRule()); }
	 iv_ruleExceptionMapper=ruleExceptionMapper 
	 { $current=$iv_ruleExceptionMapper.current; } 
	 EOF 
;

// Rule ExceptionMapper
ruleExceptionMapper returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ExceptionMapper' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExceptionMapperAccess().getExceptionMapperKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExceptionMapperAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExceptionMapperRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExceptionMapperAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptionMapperAccess().getRestExceptionRestExceptionParserRuleCall_3_0()); 
	    }
		lv_restException_3_0=ruleRestException		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptionMapperRule());
	        }
       		set(
       			$current, 
       			"restException",
        		lv_restException_3_0, 
        		"RestException");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='<=>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExceptionMapperAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptionMapperAccess().getBaseExceptionBaseExceptionParserRuleCall_5_0()); 
	    }
		lv_baseException_5_0=ruleBaseException		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptionMapperRule());
	        }
       		set(
       			$current, 
       			"baseException",
        		lv_baseException_5_0, 
        		"BaseException");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExceptionMapperAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleRestException
entryRuleRestException returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestExceptionRule()); }
	 iv_ruleRestException=ruleRestException 
	 { $current=$iv_ruleRestException.current; } 
	 EOF 
;

// Rule RestException
ruleRestException returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRestExceptionAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestExceptionAccess().getStatusCodeRestStatusCodeEnumRuleCall_1_0()); 
	    }
		lv_statusCode_1_0=ruleRestStatusCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestExceptionRule());
	        }
       		set(
       			$current, 
       			"statusCode",
        		lv_statusCode_1_0, 
        		"RestStatusCode");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRestExceptionAccess().getCommaKeyword_2());
    }
(
(
		lv_message_3_0=RULE_STRING
		{
			newLeafNode(lv_message_3_0, grammarAccess.getRestExceptionAccess().getMessageSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRestExceptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRestExceptionAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_code_0_0=RULE_STRING
		{
			newLeafNode(lv_code_0_0, grammarAccess.getBlockAccess().getCodeSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_0_0, 
        		"STRING");
	    }

)
)
;





// Rule RestStatusCode
ruleRestStatusCode returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='INFORMATIONAL' 
	{
        $current = grammarAccess.getRestStatusCodeAccess().getINFORMATIONALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRestStatusCodeAccess().getINFORMATIONALEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='SUCCESS' 
	{
        $current = grammarAccess.getRestStatusCodeAccess().getSUCCESSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRestStatusCodeAccess().getSUCCESSEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='REDIRECTION' 
	{
        $current = grammarAccess.getRestStatusCodeAccess().getREDIRECTIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getRestStatusCodeAccess().getREDIRECTIONEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='CLIENT_ERROR' 
	{
        $current = grammarAccess.getRestStatusCodeAccess().getCLIENT_ERROREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getRestStatusCodeAccess().getCLIENT_ERROREnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='SERVER_ERROR' 
	{
        $current = grammarAccess.getRestStatusCodeAccess().getSERVER_ERROREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getRestStatusCodeAccess().getSERVER_ERROREnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='NETWORK_ERROR' 
	{
        $current = grammarAccess.getRestStatusCodeAccess().getNETWORK_ERROREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getRestStatusCodeAccess().getNETWORK_ERROREnumLiteralDeclaration_5()); 
    }
));



RULE_INTEGER : ('0'..'9')+;

RULE_STRING : '"' ('0'..'9'|'A'..'Z'|'a'..'z'|'_'|':'|'/'|'.'|' ')* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



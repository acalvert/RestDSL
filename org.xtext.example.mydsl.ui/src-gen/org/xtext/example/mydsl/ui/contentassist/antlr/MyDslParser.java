/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser result = new org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getRestStatusCodeAccess().getAlternatives(), "rule__RestStatusCode__Alternatives");
					put(grammarAccess.getDomainModelAccess().getGroup(), "rule__DomainModel__Group__0");
					put(grammarAccess.getRestAPIAccess().getGroup(), "rule__RestAPI__Group__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup(), "rule__PrimitiveType__Group__0");
					put(grammarAccess.getDataModelAccess().getGroup(), "rule__DataModel__Group__0");
					put(grammarAccess.getDataModelAccess().getGroup_2(), "rule__DataModel__Group_2__0");
					put(grammarAccess.getRestModelAccess().getGroup(), "rule__RestModel__Group__0");
					put(grammarAccess.getRestModelAccess().getGroup_2(), "rule__RestModel__Group_2__0");
					put(grammarAccess.getMappingModelAccess().getGroup(), "rule__MappingModel__Group__0");
					put(grammarAccess.getTransformationAccess().getGroup(), "rule__Transformation__Group__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getResourceAccess().getGroup(), "rule__Resource__Group__0");
					put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
					put(grammarAccess.getDataAccessObjectAccess().getGroup(), "rule__DataAccessObject__Group__0");
					put(grammarAccess.getDomainModelAccess().getElementsAssignment_0(), "rule__DomainModel__ElementsAssignment_0");
					put(grammarAccess.getDomainModelAccess().getApisAssignment_1(), "rule__DomainModel__ApisAssignment_1");
					put(grammarAccess.getRestAPIAccess().getResourceAssignment_0(), "rule__RestAPI__ResourceAssignment_0");
					put(grammarAccess.getRestAPIAccess().getServiceAssignment_1(), "rule__RestAPI__ServiceAssignment_1");
					put(grammarAccess.getRestAPIAccess().getDaoAssignment_2(), "rule__RestAPI__DaoAssignment_2");
					put(grammarAccess.getPrimitiveTypeAccess().getNameAssignment_1(), "rule__PrimitiveType__NameAssignment_1");
					put(grammarAccess.getDataModelAccess().getNameAssignment_1(), "rule__DataModel__NameAssignment_1");
					put(grammarAccess.getDataModelAccess().getSuperTypeAssignment_2_1(), "rule__DataModel__SuperTypeAssignment_2_1");
					put(grammarAccess.getDataModelAccess().getFeaturesAssignment_4(), "rule__DataModel__FeaturesAssignment_4");
					put(grammarAccess.getRestModelAccess().getNameAssignment_1(), "rule__RestModel__NameAssignment_1");
					put(grammarAccess.getRestModelAccess().getSuperTypeAssignment_2_1(), "rule__RestModel__SuperTypeAssignment_2_1");
					put(grammarAccess.getRestModelAccess().getFeaturesAssignment_4(), "rule__RestModel__FeaturesAssignment_4");
					put(grammarAccess.getMappingModelAccess().getNameAssignment_1(), "rule__MappingModel__NameAssignment_1");
					put(grammarAccess.getMappingModelAccess().getTransformationAssignment_3(), "rule__MappingModel__TransformationAssignment_3");
					put(grammarAccess.getTransformationAccess().getDataModelAssignment_1(), "rule__Transformation__DataModelAssignment_1");
					put(grammarAccess.getTransformationAccess().getRestModelAssignment_3(), "rule__Transformation__RestModelAssignment_3");
					put(grammarAccess.getFeatureAccess().getManyAssignment_0(), "rule__Feature__ManyAssignment_0");
					put(grammarAccess.getFeatureAccess().getNameAssignment_1(), "rule__Feature__NameAssignment_1");
					put(grammarAccess.getFeatureAccess().getTypeAssignment_3(), "rule__Feature__TypeAssignment_3");
					put(grammarAccess.getResourceAccess().getNameAssignment_1(), "rule__Resource__NameAssignment_1");
					put(grammarAccess.getResourceAccess().getCreateRestModelAssignment_4(), "rule__Resource__CreateRestModelAssignment_4");
					put(grammarAccess.getResourceAccess().getException1Assignment_7(), "rule__Resource__Exception1Assignment_7");
					put(grammarAccess.getResourceAccess().getCreateMethodAssignment_9(), "rule__Resource__CreateMethodAssignment_9");
					put(grammarAccess.getResourceAccess().getCreatedRestModelAssignment_11(), "rule__Resource__CreatedRestModelAssignment_11");
					put(grammarAccess.getResourceAccess().getFindbyAssignment_15(), "rule__Resource__FindbyAssignment_15");
					put(grammarAccess.getResourceAccess().getException2Assignment_18(), "rule__Resource__Exception2Assignment_18");
					put(grammarAccess.getResourceAccess().getFindMethodAssignment_20(), "rule__Resource__FindMethodAssignment_20");
					put(grammarAccess.getResourceAccess().getFoundRestModelAssignment_22(), "rule__Resource__FoundRestModelAssignment_22");
					put(grammarAccess.getResourceAccess().getUpdatebyAssignment_26(), "rule__Resource__UpdatebyAssignment_26");
					put(grammarAccess.getResourceAccess().getUpdateRestModelAssignment_28(), "rule__Resource__UpdateRestModelAssignment_28");
					put(grammarAccess.getResourceAccess().getException3Assignment_31(), "rule__Resource__Exception3Assignment_31");
					put(grammarAccess.getResourceAccess().getUpdateMethodAssignment_33(), "rule__Resource__UpdateMethodAssignment_33");
					put(grammarAccess.getResourceAccess().getUpdatedRestModelAssignment_35(), "rule__Resource__UpdatedRestModelAssignment_35");
					put(grammarAccess.getResourceAccess().getDeletebyAssignment_39(), "rule__Resource__DeletebyAssignment_39");
					put(grammarAccess.getResourceAccess().getException4Assignment_42(), "rule__Resource__Exception4Assignment_42");
					put(grammarAccess.getResourceAccess().getDeleteMethodAssignment_44(), "rule__Resource__DeleteMethodAssignment_44");
					put(grammarAccess.getServiceAccess().getNameAssignment_1(), "rule__Service__NameAssignment_1");
					put(grammarAccess.getServiceAccess().getCreateDataModelAssignment_4(), "rule__Service__CreateDataModelAssignment_4");
					put(grammarAccess.getServiceAccess().getException1Assignment_7(), "rule__Service__Exception1Assignment_7");
					put(grammarAccess.getServiceAccess().getCreateMethodAssignment_9(), "rule__Service__CreateMethodAssignment_9");
					put(grammarAccess.getServiceAccess().getCreatedDataModelAssignment_11(), "rule__Service__CreatedDataModelAssignment_11");
					put(grammarAccess.getServiceAccess().getFindbyAssignment_15(), "rule__Service__FindbyAssignment_15");
					put(grammarAccess.getServiceAccess().getException2Assignment_18(), "rule__Service__Exception2Assignment_18");
					put(grammarAccess.getServiceAccess().getFindMethodAssignment_20(), "rule__Service__FindMethodAssignment_20");
					put(grammarAccess.getServiceAccess().getFoundDataModelAssignment_22(), "rule__Service__FoundDataModelAssignment_22");
					put(grammarAccess.getServiceAccess().getUpdatebyAssignment_26(), "rule__Service__UpdatebyAssignment_26");
					put(grammarAccess.getServiceAccess().getUpdateDataModelAssignment_28(), "rule__Service__UpdateDataModelAssignment_28");
					put(grammarAccess.getServiceAccess().getException3Assignment_31(), "rule__Service__Exception3Assignment_31");
					put(grammarAccess.getServiceAccess().getUpdateMethodAssignment_33(), "rule__Service__UpdateMethodAssignment_33");
					put(grammarAccess.getServiceAccess().getUpdatedDataModelAssignment_35(), "rule__Service__UpdatedDataModelAssignment_35");
					put(grammarAccess.getServiceAccess().getDeletebyAssignment_39(), "rule__Service__DeletebyAssignment_39");
					put(grammarAccess.getServiceAccess().getException4Assignment_42(), "rule__Service__Exception4Assignment_42");
					put(grammarAccess.getServiceAccess().getDeleteMethodAssignment_44(), "rule__Service__DeleteMethodAssignment_44");
					put(grammarAccess.getDataAccessObjectAccess().getNameAssignment_1(), "rule__DataAccessObject__NameAssignment_1");
					put(grammarAccess.getDataAccessObjectAccess().getCreateDataModelAssignment_4(), "rule__DataAccessObject__CreateDataModelAssignment_4");
					put(grammarAccess.getDataAccessObjectAccess().getException1Assignment_7(), "rule__DataAccessObject__Exception1Assignment_7");
					put(grammarAccess.getDataAccessObjectAccess().getCreateMethodAssignment_9(), "rule__DataAccessObject__CreateMethodAssignment_9");
					put(grammarAccess.getDataAccessObjectAccess().getCreatedDataModelAssignment_11(), "rule__DataAccessObject__CreatedDataModelAssignment_11");
					put(grammarAccess.getDataAccessObjectAccess().getFindbyAssignment_15(), "rule__DataAccessObject__FindbyAssignment_15");
					put(grammarAccess.getDataAccessObjectAccess().getException2Assignment_18(), "rule__DataAccessObject__Exception2Assignment_18");
					put(grammarAccess.getDataAccessObjectAccess().getFindMethodAssignment_20(), "rule__DataAccessObject__FindMethodAssignment_20");
					put(grammarAccess.getDataAccessObjectAccess().getFoundDataModelAssignment_22(), "rule__DataAccessObject__FoundDataModelAssignment_22");
					put(grammarAccess.getDataAccessObjectAccess().getUpdatebyAssignment_26(), "rule__DataAccessObject__UpdatebyAssignment_26");
					put(grammarAccess.getDataAccessObjectAccess().getUpdateDataModelAssignment_28(), "rule__DataAccessObject__UpdateDataModelAssignment_28");
					put(grammarAccess.getDataAccessObjectAccess().getException3Assignment_31(), "rule__DataAccessObject__Exception3Assignment_31");
					put(grammarAccess.getDataAccessObjectAccess().getUpdateMethodAssignment_33(), "rule__DataAccessObject__UpdateMethodAssignment_33");
					put(grammarAccess.getDataAccessObjectAccess().getUpdatedDataModelAssignment_35(), "rule__DataAccessObject__UpdatedDataModelAssignment_35");
					put(grammarAccess.getDataAccessObjectAccess().getDeletebyAssignment_39(), "rule__DataAccessObject__DeletebyAssignment_39");
					put(grammarAccess.getDataAccessObjectAccess().getException4Assignment_42(), "rule__DataAccessObject__Exception4Assignment_42");
					put(grammarAccess.getDataAccessObjectAccess().getDeleteMethodAssignment_44(), "rule__DataAccessObject__DeleteMethodAssignment_44");
					put(grammarAccess.getRestExceptionAccess().getStatusCodeAssignment(), "rule__RestException__StatusCodeAssignment");
					put(grammarAccess.getJavaMethodAccess().getCodeAssignment(), "rule__JavaMethod__CodeAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleDomainModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}

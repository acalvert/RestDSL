/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {
	
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser createParser() {
		org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser result = new org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getDataModelMethodConclusionAccess().getAlternatives(), "rule__DataModelMethodConclusion__Alternatives");
					put(grammarAccess.getRestModelMethodConclusionAccess().getAlternatives(), "rule__RestModelMethodConclusion__Alternatives");
					put(grammarAccess.getRestStatusCodeAccess().getAlternatives(), "rule__RestStatusCode__Alternatives");
					put(grammarAccess.getDomainModelAccess().getGroup(), "rule__DomainModel__Group__0");
					put(grammarAccess.getRestAPIAccess().getGroup(), "rule__RestAPI__Group__0");
					put(grammarAccess.getPrimitiveTypeAccess().getGroup(), "rule__PrimitiveType__Group__0");
					put(grammarAccess.getDataModelAccess().getGroup(), "rule__DataModel__Group__0");
					put(grammarAccess.getDataModelAccess().getGroup_2(), "rule__DataModel__Group_2__0");
					put(grammarAccess.getRestModelAccess().getGroup(), "rule__RestModel__Group__0");
					put(grammarAccess.getRestModelAccess().getGroup_2(), "rule__RestModel__Group_2__0");
					put(grammarAccess.getModelMapperAccess().getGroup(), "rule__ModelMapper__Group__0");
					put(grammarAccess.getTransformationAccess().getGroup(), "rule__Transformation__Group__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getResourceAccess().getGroup(), "rule__Resource__Group__0");
					put(grammarAccess.getResourceAccess().getGroup_39(), "rule__Resource__Group_39__0");
					put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
					put(grammarAccess.getServiceAccess().getGroup_36(), "rule__Service__Group_36__0");
					put(grammarAccess.getValidationServiceAccess().getGroup(), "rule__ValidationService__Group__0");
					put(grammarAccess.getDataAccessObjectAccess().getGroup(), "rule__DataAccessObject__Group__0");
					put(grammarAccess.getDataAccessObjectAccess().getGroup_35(), "rule__DataAccessObject__Group_35__0");
					put(grammarAccess.getDataModelMethodConclusionAccess().getGroup_0(), "rule__DataModelMethodConclusion__Group_0__0");
					put(grammarAccess.getDataModelMethodConclusionAccess().getGroup_1(), "rule__DataModelMethodConclusion__Group_1__0");
					put(grammarAccess.getRestModelMethodConclusionAccess().getGroup_0(), "rule__RestModelMethodConclusion__Group_0__0");
					put(grammarAccess.getRestModelMethodConclusionAccess().getGroup_1(), "rule__RestModelMethodConclusion__Group_1__0");
					put(grammarAccess.getBaseExceptionAccess().getGroup(), "rule__BaseException__Group__0");
					put(grammarAccess.getExceptionMapperAccess().getGroup(), "rule__ExceptionMapper__Group__0");
					put(grammarAccess.getRestExceptionAccess().getGroup(), "rule__RestException__Group__0");
					put(grammarAccess.getDomainModelAccess().getElementsAssignment_0(), "rule__DomainModel__ElementsAssignment_0");
					put(grammarAccess.getDomainModelAccess().getApisAssignment_1(), "rule__DomainModel__ApisAssignment_1");
					put(grammarAccess.getRestAPIAccess().getResourceAssignment_1(), "rule__RestAPI__ResourceAssignment_1");
					put(grammarAccess.getRestAPIAccess().getServiceAssignment_2(), "rule__RestAPI__ServiceAssignment_2");
					put(grammarAccess.getRestAPIAccess().getDaoAssignment_3(), "rule__RestAPI__DaoAssignment_3");
					put(grammarAccess.getRestAPIAccess().getExceptionMapperAssignment_4(), "rule__RestAPI__ExceptionMapperAssignment_4");
					put(grammarAccess.getPrimitiveTypeAccess().getNameAssignment_1(), "rule__PrimitiveType__NameAssignment_1");
					put(grammarAccess.getDataModelAccess().getNameAssignment_1(), "rule__DataModel__NameAssignment_1");
					put(grammarAccess.getDataModelAccess().getSuperTypeAssignment_2_1(), "rule__DataModel__SuperTypeAssignment_2_1");
					put(grammarAccess.getDataModelAccess().getIdAssignment_6(), "rule__DataModel__IdAssignment_6");
					put(grammarAccess.getDataModelAccess().getFeaturesAssignment_7(), "rule__DataModel__FeaturesAssignment_7");
					put(grammarAccess.getRestModelAccess().getNameAssignment_1(), "rule__RestModel__NameAssignment_1");
					put(grammarAccess.getRestModelAccess().getSuperTypeAssignment_2_1(), "rule__RestModel__SuperTypeAssignment_2_1");
					put(grammarAccess.getRestModelAccess().getIdAssignment_6(), "rule__RestModel__IdAssignment_6");
					put(grammarAccess.getRestModelAccess().getFeaturesAssignment_7(), "rule__RestModel__FeaturesAssignment_7");
					put(grammarAccess.getRestModelAccess().getSelfAssignment_10(), "rule__RestModel__SelfAssignment_10");
					put(grammarAccess.getModelMapperAccess().getNameAssignment_1(), "rule__ModelMapper__NameAssignment_1");
					put(grammarAccess.getModelMapperAccess().getTransformationAssignment_3(), "rule__ModelMapper__TransformationAssignment_3");
					put(grammarAccess.getTransformationAccess().getDataModelAssignment_1(), "rule__Transformation__DataModelAssignment_1");
					put(grammarAccess.getTransformationAccess().getRestModelAssignment_3(), "rule__Transformation__RestModelAssignment_3");
					put(grammarAccess.getFeatureAccess().getManyAssignment_0(), "rule__Feature__ManyAssignment_0");
					put(grammarAccess.getFeatureAccess().getNameAssignment_1(), "rule__Feature__NameAssignment_1");
					put(grammarAccess.getFeatureAccess().getTypeAssignment_3(), "rule__Feature__TypeAssignment_3");
					put(grammarAccess.getResourceAccess().getNameAssignment_1(), "rule__Resource__NameAssignment_1");
					put(grammarAccess.getResourceAccess().getServiceAssignment_3(), "rule__Resource__ServiceAssignment_3");
					put(grammarAccess.getResourceAccess().getExceptionMapperAssignment_4(), "rule__Resource__ExceptionMapperAssignment_4");
					put(grammarAccess.getResourceAccess().getCreateRestModelAssignment_7(), "rule__Resource__CreateRestModelAssignment_7");
					put(grammarAccess.getResourceAccess().getCreateValServiceAssignment_10(), "rule__Resource__CreateValServiceAssignment_10");
					put(grammarAccess.getResourceAccess().getCreateMethodAssignment_11(), "rule__Resource__CreateMethodAssignment_11");
					put(grammarAccess.getResourceAccess().getCreateConclusionAssignment_12(), "rule__Resource__CreateConclusionAssignment_12");
					put(grammarAccess.getResourceAccess().getFindbyAssignment_16(), "rule__Resource__FindbyAssignment_16");
					put(grammarAccess.getResourceAccess().getFindMethodAssignment_19(), "rule__Resource__FindMethodAssignment_19");
					put(grammarAccess.getResourceAccess().getFindConclusionAssignment_20(), "rule__Resource__FindConclusionAssignment_20");
					put(grammarAccess.getResourceAccess().getUpdatebyAssignment_24(), "rule__Resource__UpdatebyAssignment_24");
					put(grammarAccess.getResourceAccess().getUpdateRestModelAssignment_26(), "rule__Resource__UpdateRestModelAssignment_26");
					put(grammarAccess.getResourceAccess().getUpdateValServiceAssignment_29(), "rule__Resource__UpdateValServiceAssignment_29");
					put(grammarAccess.getResourceAccess().getUpdateMethodAssignment_30(), "rule__Resource__UpdateMethodAssignment_30");
					put(grammarAccess.getResourceAccess().getUpdateConclusionAssignment_31(), "rule__Resource__UpdateConclusionAssignment_31");
					put(grammarAccess.getResourceAccess().getDeletebyAssignment_35(), "rule__Resource__DeletebyAssignment_35");
					put(grammarAccess.getResourceAccess().getDeleteMethodAssignment_38(), "rule__Resource__DeleteMethodAssignment_38");
					put(grammarAccess.getResourceAccess().getException4Assignment_39_1(), "rule__Resource__Exception4Assignment_39_1");
					put(grammarAccess.getServiceAccess().getNameAssignment_1(), "rule__Service__NameAssignment_1");
					put(grammarAccess.getServiceAccess().getDaoAssignment_3(), "rule__Service__DaoAssignment_3");
					put(grammarAccess.getServiceAccess().getCreateDataModelAssignment_6(), "rule__Service__CreateDataModelAssignment_6");
					put(grammarAccess.getServiceAccess().getCreateMethodAssignment_9(), "rule__Service__CreateMethodAssignment_9");
					put(grammarAccess.getServiceAccess().getCreateConclusionAssignment_10(), "rule__Service__CreateConclusionAssignment_10");
					put(grammarAccess.getServiceAccess().getFindbyAssignment_14(), "rule__Service__FindbyAssignment_14");
					put(grammarAccess.getServiceAccess().getFindMethodAssignment_17(), "rule__Service__FindMethodAssignment_17");
					put(grammarAccess.getServiceAccess().getFindConclusionAssignment_18(), "rule__Service__FindConclusionAssignment_18");
					put(grammarAccess.getServiceAccess().getUpdatebyAssignment_22(), "rule__Service__UpdatebyAssignment_22");
					put(grammarAccess.getServiceAccess().getUpdateDataModelAssignment_24(), "rule__Service__UpdateDataModelAssignment_24");
					put(grammarAccess.getServiceAccess().getUpdateMethodAssignment_27(), "rule__Service__UpdateMethodAssignment_27");
					put(grammarAccess.getServiceAccess().getUpdateConclusionAssignment_28(), "rule__Service__UpdateConclusionAssignment_28");
					put(grammarAccess.getServiceAccess().getDeletebyAssignment_32(), "rule__Service__DeletebyAssignment_32");
					put(grammarAccess.getServiceAccess().getDeleteMethodAssignment_35(), "rule__Service__DeleteMethodAssignment_35");
					put(grammarAccess.getServiceAccess().getException4Assignment_36_1(), "rule__Service__Exception4Assignment_36_1");
					put(grammarAccess.getValidationServiceAccess().getRestModelAssignment_2(), "rule__ValidationService__RestModelAssignment_2");
					put(grammarAccess.getValidationServiceAccess().getBlockAssignment_5(), "rule__ValidationService__BlockAssignment_5");
					put(grammarAccess.getDataAccessObjectAccess().getNameAssignment_1(), "rule__DataAccessObject__NameAssignment_1");
					put(grammarAccess.getDataAccessObjectAccess().getCreateDataModelAssignment_5(), "rule__DataAccessObject__CreateDataModelAssignment_5");
					put(grammarAccess.getDataAccessObjectAccess().getCreateMethodAssignment_8(), "rule__DataAccessObject__CreateMethodAssignment_8");
					put(grammarAccess.getDataAccessObjectAccess().getCreateConclusionAssignment_9(), "rule__DataAccessObject__CreateConclusionAssignment_9");
					put(grammarAccess.getDataAccessObjectAccess().getFindbyAssignment_13(), "rule__DataAccessObject__FindbyAssignment_13");
					put(grammarAccess.getDataAccessObjectAccess().getFindMethodAssignment_16(), "rule__DataAccessObject__FindMethodAssignment_16");
					put(grammarAccess.getDataAccessObjectAccess().getFindConclusionAssignment_17(), "rule__DataAccessObject__FindConclusionAssignment_17");
					put(grammarAccess.getDataAccessObjectAccess().getUpdatebyAssignment_21(), "rule__DataAccessObject__UpdatebyAssignment_21");
					put(grammarAccess.getDataAccessObjectAccess().getUpdateDataModelAssignment_23(), "rule__DataAccessObject__UpdateDataModelAssignment_23");
					put(grammarAccess.getDataAccessObjectAccess().getUpdateMethodAssignment_26(), "rule__DataAccessObject__UpdateMethodAssignment_26");
					put(grammarAccess.getDataAccessObjectAccess().getUpdateConclusionAssignment_27(), "rule__DataAccessObject__UpdateConclusionAssignment_27");
					put(grammarAccess.getDataAccessObjectAccess().getDeletebyAssignment_31(), "rule__DataAccessObject__DeletebyAssignment_31");
					put(grammarAccess.getDataAccessObjectAccess().getDeleteMethodAssignment_34(), "rule__DataAccessObject__DeleteMethodAssignment_34");
					put(grammarAccess.getDataAccessObjectAccess().getExceptionsAssignment_35_1(), "rule__DataAccessObject__ExceptionsAssignment_35_1");
					put(grammarAccess.getDataModelMethodConclusionAccess().getDataModelAssignment_0_1(), "rule__DataModelMethodConclusion__DataModelAssignment_0_1");
					put(grammarAccess.getDataModelMethodConclusionAccess().getExceptionsAssignment_1_1(), "rule__DataModelMethodConclusion__ExceptionsAssignment_1_1");
					put(grammarAccess.getRestModelMethodConclusionAccess().getRestModelAssignment_0_1(), "rule__RestModelMethodConclusion__RestModelAssignment_0_1");
					put(grammarAccess.getRestModelMethodConclusionAccess().getExceptionAssignment_1_1(), "rule__RestModelMethodConclusion__ExceptionAssignment_1_1");
					put(grammarAccess.getRestExceptionListAccess().getExceptionAssignment(), "rule__RestExceptionList__ExceptionAssignment");
					put(grammarAccess.getBaseExceptionAccess().getErrorCodeAssignment_1(), "rule__BaseException__ErrorCodeAssignment_1");
					put(grammarAccess.getBaseExceptionAccess().getMessageAssignment_3(), "rule__BaseException__MessageAssignment_3");
					put(grammarAccess.getExceptionMapperAccess().getNameAssignment_1(), "rule__ExceptionMapper__NameAssignment_1");
					put(grammarAccess.getExceptionMapperAccess().getRestExceptionAssignment_3(), "rule__ExceptionMapper__RestExceptionAssignment_3");
					put(grammarAccess.getExceptionMapperAccess().getBaseExceptionAssignment_5(), "rule__ExceptionMapper__BaseExceptionAssignment_5");
					put(grammarAccess.getRestExceptionAccess().getStatusCodeAssignment_1(), "rule__RestException__StatusCodeAssignment_1");
					put(grammarAccess.getRestExceptionAccess().getMessageAssignment_3(), "rule__RestException__MessageAssignment_3");
					put(grammarAccess.getBlockAccess().getCodeAssignment(), "rule__Block__CodeAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser typedParser = (org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalMyDslParser) parser;
			typedParser.entryRuleDomainModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
